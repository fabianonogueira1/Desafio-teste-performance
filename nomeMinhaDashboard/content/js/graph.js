/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 246.0, "minX": 0.0, "maxY": 3582.0, "series": [{"data": [[0.0, 253.0], [0.1, 253.0], [0.2, 253.0], [0.3, 253.0], [0.4, 255.0], [0.5, 255.0], [0.6, 255.0], [0.7, 255.0], [0.8, 259.0], [0.9, 259.0], [1.0, 259.0], [1.1, 259.0], [1.2, 259.0], [1.3, 262.0], [1.4, 262.0], [1.5, 262.0], [1.6, 266.0], [1.7, 266.0], [1.8, 266.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 266.0], [3.3, 266.0], [3.4, 266.0], [3.5, 266.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 269.0], [4.1, 269.0], [4.2, 269.0], [4.3, 269.0], [4.4, 269.0], [4.5, 269.0], [4.6, 269.0], [4.7, 269.0], [4.8, 270.0], [4.9, 270.0], [5.0, 270.0], [5.1, 270.0], [5.2, 271.0], [5.3, 271.0], [5.4, 271.0], [5.5, 271.0], [5.6, 271.0], [5.7, 272.0], [5.8, 272.0], [5.9, 272.0], [6.0, 272.0], [6.1, 273.0], [6.2, 273.0], [6.3, 273.0], [6.4, 273.0], [6.5, 274.0], [6.6, 274.0], [6.7, 274.0], [6.8, 274.0], [6.9, 274.0], [7.0, 274.0], [7.1, 274.0], [7.2, 274.0], [7.3, 275.0], [7.4, 275.0], [7.5, 275.0], [7.6, 275.0], [7.7, 275.0], [7.8, 275.0], [7.9, 275.0], [8.0, 275.0], [8.1, 276.0], [8.2, 276.0], [8.3, 276.0], [8.4, 276.0], [8.5, 278.0], [8.6, 278.0], [8.7, 278.0], [8.8, 278.0], [8.9, 279.0], [9.0, 279.0], [9.1, 279.0], [9.2, 279.0], [9.3, 279.0], [9.4, 279.0], [9.5, 279.0], [9.6, 279.0], [9.7, 283.0], [9.8, 283.0], [9.9, 283.0], [10.0, 283.0], [10.1, 284.0], [10.2, 284.0], [10.3, 284.0], [10.4, 284.0], [10.5, 288.0], [10.6, 288.0], [10.7, 288.0], [10.8, 288.0], [10.9, 288.0], [11.0, 288.0], [11.1, 288.0], [11.2, 288.0], [11.3, 288.0], [11.4, 288.0], [11.5, 288.0], [11.6, 288.0], [11.7, 290.0], [11.8, 290.0], [11.9, 290.0], [12.0, 290.0], [12.1, 292.0], [12.2, 292.0], [12.3, 292.0], [12.4, 292.0], [12.5, 294.0], [12.6, 294.0], [12.7, 294.0], [12.8, 294.0], [12.9, 295.0], [13.0, 295.0], [13.1, 295.0], [13.2, 295.0], [13.3, 297.0], [13.4, 297.0], [13.5, 297.0], [13.6, 297.0], [13.7, 299.0], [13.8, 299.0], [13.9, 299.0], [14.0, 299.0], [14.1, 300.0], [14.2, 300.0], [14.3, 300.0], [14.4, 300.0], [14.5, 300.0], [14.6, 300.0], [14.7, 300.0], [14.8, 300.0], [14.9, 300.0], [15.0, 300.0], [15.1, 300.0], [15.2, 300.0], [15.3, 301.0], [15.4, 301.0], [15.5, 301.0], [15.6, 301.0], [15.7, 301.0], [15.8, 301.0], [15.9, 301.0], [16.0, 301.0], [16.1, 302.0], [16.2, 302.0], [16.3, 302.0], [16.4, 302.0], [16.5, 304.0], [16.6, 304.0], [16.7, 304.0], [16.8, 305.0], [16.9, 305.0], [17.0, 305.0], [17.1, 305.0], [17.2, 305.0], [17.3, 305.0], [17.4, 305.0], [17.5, 305.0], [17.6, 309.0], [17.7, 309.0], [17.8, 309.0], [17.9, 309.0], [18.0, 310.0], [18.1, 310.0], [18.2, 310.0], [18.3, 310.0], [18.4, 311.0], [18.5, 311.0], [18.6, 311.0], [18.7, 311.0], [18.8, 313.0], [18.9, 313.0], [19.0, 313.0], [19.1, 313.0], [19.2, 313.0], [19.3, 313.0], [19.4, 313.0], [19.5, 313.0], [19.6, 313.0], [19.7, 313.0], [19.8, 313.0], [19.9, 313.0], [20.0, 316.0], [20.1, 316.0], [20.2, 316.0], [20.3, 316.0], [20.4, 316.0], [20.5, 316.0], [20.6, 316.0], [20.7, 316.0], [20.8, 317.0], [20.9, 317.0], [21.0, 317.0], [21.1, 317.0], [21.2, 319.0], [21.3, 319.0], [21.4, 319.0], [21.5, 319.0], [21.6, 320.0], [21.7, 320.0], [21.8, 320.0], [21.9, 320.0], [22.0, 324.0], [22.1, 324.0], [22.2, 324.0], [22.3, 324.0], [22.4, 325.0], [22.5, 325.0], [22.6, 325.0], [22.7, 325.0], [22.8, 325.0], [22.9, 325.0], [23.0, 325.0], [23.1, 325.0], [23.2, 326.0], [23.3, 326.0], [23.4, 326.0], [23.5, 326.0], [23.6, 329.0], [23.7, 329.0], [23.8, 329.0], [23.9, 329.0], [24.0, 329.0], [24.1, 329.0], [24.2, 329.0], [24.3, 329.0], [24.4, 332.0], [24.5, 332.0], [24.6, 332.0], [24.7, 332.0], [24.8, 332.0], [24.9, 332.0], [25.0, 332.0], [25.1, 332.0], [25.2, 333.0], [25.3, 333.0], [25.4, 333.0], [25.5, 333.0], [25.6, 338.0], [25.7, 338.0], [25.8, 338.0], [25.9, 338.0], [26.0, 338.0], [26.1, 338.0], [26.2, 338.0], [26.3, 338.0], [26.4, 340.0], [26.5, 340.0], [26.6, 340.0], [26.7, 340.0], [26.8, 341.0], [26.9, 341.0], [27.0, 341.0], [27.1, 341.0], [27.2, 343.0], [27.3, 343.0], [27.4, 343.0], [27.5, 343.0], [27.6, 345.0], [27.7, 345.0], [27.8, 345.0], [27.9, 345.0], [28.0, 349.0], [28.1, 349.0], [28.2, 349.0], [28.3, 349.0], [28.4, 349.0], [28.5, 349.0], [28.6, 349.0], [28.7, 349.0], [28.8, 350.0], [28.9, 350.0], [29.0, 350.0], [29.1, 350.0], [29.2, 351.0], [29.3, 351.0], [29.4, 351.0], [29.5, 351.0], [29.6, 351.0], [29.7, 351.0], [29.8, 351.0], [29.9, 351.0], [30.0, 352.0], [30.1, 352.0], [30.2, 352.0], [30.3, 352.0], [30.4, 352.0], [30.5, 352.0], [30.6, 352.0], [30.7, 352.0], [30.8, 353.0], [30.9, 353.0], [31.0, 353.0], [31.1, 353.0], [31.2, 354.0], [31.3, 354.0], [31.4, 354.0], [31.5, 354.0], [31.6, 354.0], [31.7, 354.0], [31.8, 354.0], [31.9, 354.0], [32.0, 354.0], [32.1, 354.0], [32.2, 354.0], [32.3, 354.0], [32.4, 355.0], [32.5, 355.0], [32.6, 355.0], [32.7, 355.0], [32.8, 355.0], [32.9, 355.0], [33.0, 355.0], [33.1, 355.0], [33.2, 357.0], [33.3, 357.0], [33.4, 357.0], [33.5, 357.0], [33.6, 357.0], [33.7, 357.0], [33.8, 357.0], [33.9, 357.0], [34.0, 359.0], [34.1, 359.0], [34.2, 359.0], [34.3, 359.0], [34.4, 361.0], [34.5, 361.0], [34.6, 361.0], [34.7, 361.0], [34.8, 362.0], [34.9, 362.0], [35.0, 362.0], [35.1, 362.0], [35.2, 363.0], [35.3, 363.0], [35.4, 363.0], [35.5, 363.0], [35.6, 365.0], [35.7, 365.0], [35.8, 365.0], [35.9, 365.0], [36.0, 365.0], [36.1, 365.0], [36.2, 365.0], [36.3, 365.0], [36.4, 370.0], [36.5, 370.0], [36.6, 370.0], [36.7, 370.0], [36.8, 371.0], [36.9, 371.0], [37.0, 371.0], [37.1, 371.0], [37.2, 371.0], [37.3, 371.0], [37.4, 371.0], [37.5, 371.0], [37.6, 373.0], [37.7, 373.0], [37.8, 373.0], [37.9, 373.0], [38.0, 373.0], [38.1, 373.0], [38.2, 373.0], [38.3, 373.0], [38.4, 375.0], [38.5, 375.0], [38.6, 375.0], [38.7, 375.0], [38.8, 376.0], [38.9, 376.0], [39.0, 376.0], [39.1, 376.0], [39.2, 378.0], [39.3, 378.0], [39.4, 378.0], [39.5, 378.0], [39.6, 379.0], [39.7, 379.0], [39.8, 379.0], [39.9, 379.0], [40.0, 380.0], [40.1, 380.0], [40.2, 380.0], [40.3, 380.0], [40.4, 384.0], [40.5, 384.0], [40.6, 384.0], [40.7, 384.0], [40.8, 384.0], [40.9, 384.0], [41.0, 384.0], [41.1, 384.0], [41.2, 384.0], [41.3, 384.0], [41.4, 384.0], [41.5, 384.0], [41.6, 385.0], [41.7, 385.0], [41.8, 385.0], [41.9, 385.0], [42.0, 385.0], [42.1, 385.0], [42.2, 385.0], [42.3, 385.0], [42.4, 385.0], [42.5, 385.0], [42.6, 385.0], [42.7, 385.0], [42.8, 386.0], [42.9, 386.0], [43.0, 386.0], [43.1, 386.0], [43.2, 386.0], [43.3, 386.0], [43.4, 386.0], [43.5, 386.0], [43.6, 387.0], [43.7, 387.0], [43.8, 387.0], [43.9, 387.0], [44.0, 390.0], [44.1, 390.0], [44.2, 390.0], [44.3, 390.0], [44.4, 392.0], [44.5, 392.0], [44.6, 392.0], [44.7, 392.0], [44.8, 394.0], [44.9, 394.0], [45.0, 394.0], [45.1, 394.0], [45.2, 394.0], [45.3, 394.0], [45.4, 394.0], [45.5, 394.0], [45.6, 394.0], [45.7, 394.0], [45.8, 394.0], [45.9, 394.0], [46.0, 396.0], [46.1, 396.0], [46.2, 396.0], [46.3, 396.0], [46.4, 397.0], [46.5, 397.0], [46.6, 397.0], [46.7, 397.0], [46.8, 399.0], [46.9, 399.0], [47.0, 399.0], [47.1, 399.0], [47.2, 400.0], [47.3, 400.0], [47.4, 400.0], [47.5, 400.0], [47.6, 401.0], [47.7, 401.0], [47.8, 401.0], [47.9, 401.0], [48.0, 403.0], [48.1, 403.0], [48.2, 403.0], [48.3, 403.0], [48.4, 404.0], [48.5, 404.0], [48.6, 404.0], [48.7, 404.0], [48.8, 405.0], [48.9, 405.0], [49.0, 405.0], [49.1, 405.0], [49.2, 406.0], [49.3, 406.0], [49.4, 406.0], [49.5, 406.0], [49.6, 409.0], [49.7, 409.0], [49.8, 409.0], [49.9, 409.0], [50.0, 409.0], [50.1, 409.0], [50.2, 409.0], [50.3, 409.0], [50.4, 411.0], [50.5, 411.0], [50.6, 411.0], [50.7, 411.0], [50.8, 415.0], [50.9, 415.0], [51.0, 415.0], [51.1, 415.0], [51.2, 416.0], [51.3, 416.0], [51.4, 416.0], [51.5, 416.0], [51.6, 418.0], [51.7, 418.0], [51.8, 418.0], [51.9, 418.0], [52.0, 422.0], [52.1, 422.0], [52.2, 422.0], [52.3, 422.0], [52.4, 423.0], [52.5, 423.0], [52.6, 423.0], [52.7, 423.0], [52.8, 423.0], [52.9, 423.0], [53.0, 423.0], [53.1, 423.0], [53.2, 429.0], [53.3, 429.0], [53.4, 429.0], [53.5, 429.0], [53.6, 429.0], [53.7, 429.0], [53.8, 429.0], [53.9, 429.0], [54.0, 430.0], [54.1, 430.0], [54.2, 430.0], [54.3, 430.0], [54.4, 431.0], [54.5, 431.0], [54.6, 431.0], [54.7, 431.0], [54.8, 431.0], [54.9, 431.0], [55.0, 431.0], [55.1, 431.0], [55.2, 432.0], [55.3, 432.0], [55.4, 432.0], [55.5, 432.0], [55.6, 434.0], [55.7, 434.0], [55.8, 434.0], [55.9, 434.0], [56.0, 434.0], [56.1, 434.0], [56.2, 434.0], [56.3, 434.0], [56.4, 435.0], [56.5, 435.0], [56.6, 435.0], [56.7, 435.0], [56.8, 436.0], [56.9, 436.0], [57.0, 436.0], [57.1, 436.0], [57.2, 438.0], [57.3, 438.0], [57.4, 438.0], [57.5, 438.0], [57.6, 438.0], [57.7, 438.0], [57.8, 438.0], [57.9, 438.0], [58.0, 438.0], [58.1, 438.0], [58.2, 438.0], [58.3, 438.0], [58.4, 439.0], [58.5, 439.0], [58.6, 439.0], [58.7, 439.0], [58.8, 440.0], [58.9, 440.0], [59.0, 440.0], [59.1, 440.0], [59.2, 441.0], [59.3, 441.0], [59.4, 441.0], [59.5, 441.0], [59.6, 444.0], [59.7, 444.0], [59.8, 444.0], [59.9, 444.0], [60.0, 447.0], [60.1, 447.0], [60.2, 447.0], [60.3, 447.0], [60.4, 452.0], [60.5, 452.0], [60.6, 452.0], [60.7, 452.0], [60.8, 455.0], [60.9, 455.0], [61.0, 455.0], [61.1, 455.0], [61.2, 457.0], [61.3, 457.0], [61.4, 457.0], [61.5, 457.0], [61.6, 457.0], [61.7, 457.0], [61.8, 457.0], [61.9, 457.0], [62.0, 459.0], [62.1, 459.0], [62.2, 459.0], [62.3, 459.0], [62.4, 460.0], [62.5, 460.0], [62.6, 460.0], [62.7, 460.0], [62.8, 461.0], [62.9, 461.0], [63.0, 461.0], [63.1, 461.0], [63.2, 462.0], [63.3, 462.0], [63.4, 462.0], [63.5, 462.0], [63.6, 465.0], [63.7, 465.0], [63.8, 465.0], [63.9, 465.0], [64.0, 465.0], [64.1, 465.0], [64.2, 465.0], [64.3, 465.0], [64.4, 469.0], [64.5, 469.0], [64.6, 469.0], [64.7, 469.0], [64.8, 470.0], [64.9, 470.0], [65.0, 470.0], [65.1, 470.0], [65.2, 473.0], [65.3, 473.0], [65.4, 473.0], [65.5, 473.0], [65.6, 474.0], [65.7, 474.0], [65.8, 474.0], [65.9, 474.0], [66.0, 475.0], [66.1, 475.0], [66.2, 475.0], [66.3, 475.0], [66.4, 481.0], [66.5, 481.0], [66.6, 481.0], [66.7, 481.0], [66.8, 482.0], [66.9, 482.0], [67.0, 482.0], [67.1, 482.0], [67.2, 483.0], [67.3, 483.0], [67.4, 483.0], [67.5, 483.0], [67.6, 483.0], [67.7, 483.0], [67.8, 483.0], [67.9, 483.0], [68.0, 484.0], [68.1, 484.0], [68.2, 484.0], [68.3, 484.0], [68.4, 486.0], [68.5, 486.0], [68.6, 486.0], [68.7, 486.0], [68.8, 487.0], [68.9, 487.0], [69.0, 487.0], [69.1, 487.0], [69.2, 487.0], [69.3, 487.0], [69.4, 487.0], [69.5, 487.0], [69.6, 497.0], [69.7, 497.0], [69.8, 497.0], [69.9, 497.0], [70.0, 497.0], [70.1, 497.0], [70.2, 497.0], [70.3, 497.0], [70.4, 500.0], [70.5, 500.0], [70.6, 500.0], [70.7, 500.0], [70.8, 503.0], [70.9, 503.0], [71.0, 503.0], [71.1, 503.0], [71.2, 503.0], [71.3, 503.0], [71.4, 503.0], [71.5, 503.0], [71.6, 504.0], [71.7, 504.0], [71.8, 504.0], [71.9, 504.0], [72.0, 509.0], [72.1, 509.0], [72.2, 509.0], [72.3, 509.0], [72.4, 511.0], [72.5, 511.0], [72.6, 511.0], [72.7, 511.0], [72.8, 511.0], [72.9, 511.0], [73.0, 511.0], [73.1, 511.0], [73.2, 514.0], [73.3, 514.0], [73.4, 514.0], [73.5, 514.0], [73.6, 515.0], [73.7, 515.0], [73.8, 515.0], [73.9, 515.0], [74.0, 519.0], [74.1, 519.0], [74.2, 519.0], [74.3, 519.0], [74.4, 520.0], [74.5, 520.0], [74.6, 520.0], [74.7, 520.0], [74.8, 525.0], [74.9, 525.0], [75.0, 525.0], [75.1, 525.0], [75.2, 534.0], [75.3, 534.0], [75.4, 534.0], [75.5, 534.0], [75.6, 540.0], [75.7, 540.0], [75.8, 540.0], [75.9, 540.0], [76.0, 550.0], [76.1, 550.0], [76.2, 550.0], [76.3, 550.0], [76.4, 552.0], [76.5, 552.0], [76.6, 552.0], [76.7, 552.0], [76.8, 552.0], [76.9, 554.0], [77.0, 554.0], [77.1, 554.0], [77.2, 554.0], [77.3, 556.0], [77.4, 556.0], [77.5, 556.0], [77.6, 556.0], [77.7, 556.0], [77.8, 556.0], [77.9, 556.0], [78.0, 556.0], [78.1, 557.0], [78.2, 557.0], [78.3, 557.0], [78.4, 557.0], [78.5, 563.0], [78.6, 563.0], [78.7, 563.0], [78.8, 563.0], [78.9, 571.0], [79.0, 571.0], [79.1, 571.0], [79.2, 571.0], [79.3, 573.0], [79.4, 573.0], [79.5, 573.0], [79.6, 573.0], [79.7, 585.0], [79.8, 585.0], [79.9, 585.0], [80.0, 585.0], [80.1, 597.0], [80.2, 597.0], [80.3, 597.0], [80.4, 597.0], [80.5, 605.0], [80.6, 605.0], [80.7, 605.0], [80.8, 605.0], [80.9, 610.0], [81.0, 610.0], [81.1, 610.0], [81.2, 610.0], [81.3, 621.0], [81.4, 621.0], [81.5, 621.0], [81.6, 621.0], [81.7, 640.0], [81.8, 640.0], [81.9, 640.0], [82.0, 640.0], [82.1, 643.0], [82.2, 643.0], [82.3, 643.0], [82.4, 643.0], [82.5, 657.0], [82.6, 657.0], [82.7, 657.0], [82.8, 657.0], [82.9, 668.0], [83.0, 668.0], [83.1, 668.0], [83.2, 668.0], [83.3, 672.0], [83.4, 672.0], [83.5, 672.0], [83.6, 672.0], [83.7, 674.0], [83.8, 674.0], [83.9, 674.0], [84.0, 674.0], [84.1, 677.0], [84.2, 677.0], [84.3, 677.0], [84.4, 677.0], [84.5, 680.0], [84.6, 680.0], [84.7, 680.0], [84.8, 680.0], [84.9, 685.0], [85.0, 685.0], [85.1, 685.0], [85.2, 685.0], [85.3, 689.0], [85.4, 689.0], [85.5, 689.0], [85.6, 689.0], [85.7, 693.0], [85.8, 693.0], [85.9, 693.0], [86.0, 693.0], [86.1, 694.0], [86.2, 694.0], [86.3, 694.0], [86.4, 694.0], [86.5, 697.0], [86.6, 697.0], [86.7, 697.0], [86.8, 697.0], [86.9, 710.0], [87.0, 710.0], [87.1, 710.0], [87.2, 710.0], [87.3, 713.0], [87.4, 713.0], [87.5, 713.0], [87.6, 713.0], [87.7, 714.0], [87.8, 714.0], [87.9, 714.0], [88.0, 714.0], [88.1, 719.0], [88.2, 719.0], [88.3, 719.0], [88.4, 719.0], [88.5, 741.0], [88.6, 741.0], [88.7, 741.0], [88.8, 741.0], [88.9, 749.0], [89.0, 749.0], [89.1, 749.0], [89.2, 749.0], [89.3, 758.0], [89.4, 758.0], [89.5, 758.0], [89.6, 758.0], [89.7, 760.0], [89.8, 760.0], [89.9, 760.0], [90.0, 760.0], [90.1, 761.0], [90.2, 761.0], [90.3, 761.0], [90.4, 761.0], [90.5, 773.0], [90.6, 773.0], [90.7, 773.0], [90.8, 773.0], [90.9, 778.0], [91.0, 778.0], [91.1, 778.0], [91.2, 778.0], [91.3, 792.0], [91.4, 792.0], [91.5, 792.0], [91.6, 792.0], [91.7, 798.0], [91.8, 798.0], [91.9, 798.0], [92.0, 798.0], [92.1, 818.0], [92.2, 818.0], [92.3, 818.0], [92.4, 818.0], [92.5, 829.0], [92.6, 829.0], [92.7, 829.0], [92.8, 829.0], [92.9, 835.0], [93.0, 835.0], [93.1, 835.0], [93.2, 835.0], [93.3, 851.0], [93.4, 851.0], [93.5, 851.0], [93.6, 851.0], [93.7, 862.0], [93.8, 862.0], [93.9, 862.0], [94.0, 862.0], [94.1, 866.0], [94.2, 866.0], [94.3, 866.0], [94.4, 866.0], [94.5, 873.0], [94.6, 873.0], [94.7, 873.0], [94.8, 873.0], [94.9, 880.0], [95.0, 880.0], [95.1, 880.0], [95.2, 880.0], [95.3, 882.0], [95.4, 882.0], [95.5, 882.0], [95.6, 882.0], [95.7, 909.0], [95.8, 909.0], [95.9, 909.0], [96.0, 909.0], [96.1, 912.0], [96.2, 912.0], [96.3, 912.0], [96.4, 912.0], [96.5, 918.0], [96.6, 918.0], [96.7, 918.0], [96.8, 918.0], [96.9, 945.0], [97.0, 945.0], [97.1, 945.0], [97.2, 945.0], [97.3, 952.0], [97.4, 952.0], [97.5, 952.0], [97.6, 952.0], [97.7, 958.0], [97.8, 958.0], [97.9, 958.0], [98.0, 958.0], [98.1, 966.0], [98.2, 966.0], [98.3, 966.0], [98.4, 966.0], [98.5, 975.0], [98.6, 975.0], [98.7, 975.0], [98.8, 975.0], [98.9, 1126.0], [99.0, 1126.0], [99.1, 1126.0], [99.2, 1126.0], [99.3, 1241.0], [99.4, 1241.0], [99.5, 1241.0], [99.6, 1241.0], [99.7, 1254.0], [99.8, 1254.0], [99.9, 1254.0], [100.0, 1254.0]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[0.0, 821.0], [0.1, 821.0], [0.2, 821.0], [0.3, 821.0], [0.4, 864.0], [0.5, 864.0], [0.6, 864.0], [0.7, 864.0], [0.8, 902.0], [0.9, 902.0], [1.0, 902.0], [1.1, 902.0], [1.2, 902.0], [1.3, 916.0], [1.4, 916.0], [1.5, 916.0], [1.6, 946.0], [1.7, 946.0], [1.8, 946.0], [1.9, 946.0], [2.0, 986.0], [2.1, 986.0], [2.2, 986.0], [2.3, 986.0], [2.4, 995.0], [2.5, 995.0], [2.6, 995.0], [2.7, 995.0], [2.8, 1004.0], [2.9, 1004.0], [3.0, 1004.0], [3.1, 1004.0], [3.2, 1007.0], [3.3, 1007.0], [3.4, 1007.0], [3.5, 1007.0], [3.6, 1035.0], [3.7, 1035.0], [3.8, 1035.0], [3.9, 1035.0], [4.0, 1035.0], [4.1, 1035.0], [4.2, 1035.0], [4.3, 1035.0], [4.4, 1039.0], [4.5, 1039.0], [4.6, 1039.0], [4.7, 1039.0], [4.8, 1049.0], [4.9, 1049.0], [5.0, 1049.0], [5.1, 1049.0], [5.2, 1051.0], [5.3, 1051.0], [5.4, 1051.0], [5.5, 1051.0], [5.6, 1051.0], [5.7, 1051.0], [5.8, 1051.0], [5.9, 1051.0], [6.0, 1054.0], [6.1, 1054.0], [6.2, 1054.0], [6.3, 1054.0], [6.4, 1057.0], [6.5, 1057.0], [6.6, 1057.0], [6.7, 1057.0], [6.8, 1057.0], [6.9, 1059.0], [7.0, 1059.0], [7.1, 1059.0], [7.2, 1059.0], [7.3, 1065.0], [7.4, 1065.0], [7.5, 1065.0], [7.6, 1065.0], [7.7, 1067.0], [7.8, 1067.0], [7.9, 1067.0], [8.0, 1067.0], [8.1, 1090.0], [8.2, 1090.0], [8.3, 1090.0], [8.4, 1090.0], [8.5, 1109.0], [8.6, 1109.0], [8.7, 1109.0], [8.8, 1109.0], [8.9, 1115.0], [9.0, 1115.0], [9.1, 1115.0], [9.2, 1115.0], [9.3, 1118.0], [9.4, 1118.0], [9.5, 1118.0], [9.6, 1118.0], [9.7, 1131.0], [9.8, 1131.0], [9.9, 1131.0], [10.0, 1131.0], [10.1, 1134.0], [10.2, 1134.0], [10.3, 1134.0], [10.4, 1134.0], [10.5, 1144.0], [10.6, 1144.0], [10.7, 1144.0], [10.8, 1144.0], [10.9, 1166.0], [11.0, 1166.0], [11.1, 1166.0], [11.2, 1166.0], [11.3, 1168.0], [11.4, 1168.0], [11.5, 1168.0], [11.6, 1168.0], [11.7, 1170.0], [11.8, 1170.0], [11.9, 1170.0], [12.0, 1170.0], [12.1, 1185.0], [12.2, 1185.0], [12.3, 1185.0], [12.4, 1185.0], [12.5, 1221.0], [12.6, 1221.0], [12.7, 1221.0], [12.8, 1221.0], [12.9, 1224.0], [13.0, 1224.0], [13.1, 1224.0], [13.2, 1224.0], [13.3, 1225.0], [13.4, 1225.0], [13.5, 1225.0], [13.6, 1225.0], [13.7, 1238.0], [13.8, 1238.0], [13.9, 1238.0], [14.0, 1238.0], [14.1, 1239.0], [14.2, 1239.0], [14.3, 1239.0], [14.4, 1239.0], [14.5, 1241.0], [14.6, 1241.0], [14.7, 1241.0], [14.8, 1241.0], [14.9, 1250.0], [15.0, 1250.0], [15.1, 1250.0], [15.2, 1250.0], [15.3, 1254.0], [15.4, 1254.0], [15.5, 1254.0], [15.6, 1254.0], [15.7, 1259.0], [15.8, 1259.0], [15.9, 1259.0], [16.0, 1259.0], [16.1, 1263.0], [16.2, 1263.0], [16.3, 1263.0], [16.4, 1263.0], [16.5, 1267.0], [16.6, 1267.0], [16.7, 1267.0], [16.8, 1267.0], [16.9, 1269.0], [17.0, 1269.0], [17.1, 1269.0], [17.2, 1269.0], [17.3, 1272.0], [17.4, 1272.0], [17.5, 1272.0], [17.6, 1276.0], [17.7, 1276.0], [17.8, 1276.0], [17.9, 1276.0], [18.0, 1281.0], [18.1, 1281.0], [18.2, 1281.0], [18.3, 1281.0], [18.4, 1299.0], [18.5, 1299.0], [18.6, 1299.0], [18.7, 1299.0], [18.8, 1304.0], [18.9, 1304.0], [19.0, 1304.0], [19.1, 1304.0], [19.2, 1314.0], [19.3, 1314.0], [19.4, 1314.0], [19.5, 1314.0], [19.6, 1314.0], [19.7, 1314.0], [19.8, 1314.0], [19.9, 1314.0], [20.0, 1316.0], [20.1, 1316.0], [20.2, 1316.0], [20.3, 1316.0], [20.4, 1333.0], [20.5, 1333.0], [20.6, 1333.0], [20.7, 1333.0], [20.8, 1338.0], [20.9, 1338.0], [21.0, 1338.0], [21.1, 1338.0], [21.2, 1339.0], [21.3, 1339.0], [21.4, 1339.0], [21.5, 1339.0], [21.6, 1353.0], [21.7, 1353.0], [21.8, 1353.0], [21.9, 1353.0], [22.0, 1356.0], [22.1, 1356.0], [22.2, 1356.0], [22.3, 1356.0], [22.4, 1357.0], [22.5, 1357.0], [22.6, 1357.0], [22.7, 1357.0], [22.8, 1357.0], [22.9, 1357.0], [23.0, 1357.0], [23.1, 1357.0], [23.2, 1369.0], [23.3, 1369.0], [23.4, 1369.0], [23.5, 1369.0], [23.6, 1375.0], [23.7, 1375.0], [23.8, 1375.0], [23.9, 1375.0], [24.0, 1376.0], [24.1, 1376.0], [24.2, 1376.0], [24.3, 1376.0], [24.4, 1380.0], [24.5, 1380.0], [24.6, 1380.0], [24.7, 1380.0], [24.8, 1395.0], [24.9, 1395.0], [25.0, 1395.0], [25.1, 1395.0], [25.2, 1402.0], [25.3, 1402.0], [25.4, 1402.0], [25.5, 1402.0], [25.6, 1403.0], [25.7, 1403.0], [25.8, 1403.0], [25.9, 1403.0], [26.0, 1407.0], [26.1, 1407.0], [26.2, 1407.0], [26.3, 1407.0], [26.4, 1415.0], [26.5, 1415.0], [26.6, 1415.0], [26.7, 1415.0], [26.8, 1418.0], [26.9, 1418.0], [27.0, 1418.0], [27.1, 1418.0], [27.2, 1418.0], [27.3, 1418.0], [27.4, 1418.0], [27.5, 1418.0], [27.6, 1418.0], [27.7, 1418.0], [27.8, 1418.0], [27.9, 1418.0], [28.0, 1420.0], [28.1, 1420.0], [28.2, 1420.0], [28.3, 1420.0], [28.4, 1423.0], [28.5, 1423.0], [28.6, 1423.0], [28.7, 1423.0], [28.8, 1439.0], [28.9, 1439.0], [29.0, 1439.0], [29.1, 1439.0], [29.2, 1440.0], [29.3, 1440.0], [29.4, 1440.0], [29.5, 1440.0], [29.6, 1448.0], [29.7, 1448.0], [29.8, 1448.0], [29.9, 1448.0], [30.0, 1452.0], [30.1, 1452.0], [30.2, 1452.0], [30.3, 1452.0], [30.4, 1462.0], [30.5, 1462.0], [30.6, 1462.0], [30.7, 1462.0], [30.8, 1470.0], [30.9, 1470.0], [31.0, 1470.0], [31.1, 1470.0], [31.2, 1470.0], [31.3, 1470.0], [31.4, 1470.0], [31.5, 1470.0], [31.6, 1474.0], [31.7, 1474.0], [31.8, 1474.0], [31.9, 1474.0], [32.0, 1493.0], [32.1, 1493.0], [32.2, 1493.0], [32.3, 1493.0], [32.4, 1500.0], [32.5, 1500.0], [32.6, 1500.0], [32.7, 1500.0], [32.8, 1511.0], [32.9, 1511.0], [33.0, 1511.0], [33.1, 1511.0], [33.2, 1527.0], [33.3, 1527.0], [33.4, 1527.0], [33.5, 1527.0], [33.6, 1540.0], [33.7, 1540.0], [33.8, 1540.0], [33.9, 1540.0], [34.0, 1542.0], [34.1, 1542.0], [34.2, 1542.0], [34.3, 1542.0], [34.4, 1544.0], [34.5, 1544.0], [34.6, 1544.0], [34.7, 1544.0], [34.8, 1552.0], [34.9, 1552.0], [35.0, 1552.0], [35.1, 1552.0], [35.2, 1555.0], [35.3, 1555.0], [35.4, 1555.0], [35.5, 1555.0], [35.6, 1556.0], [35.7, 1556.0], [35.8, 1556.0], [35.9, 1556.0], [36.0, 1564.0], [36.1, 1564.0], [36.2, 1564.0], [36.3, 1564.0], [36.4, 1573.0], [36.5, 1573.0], [36.6, 1573.0], [36.7, 1573.0], [36.8, 1576.0], [36.9, 1576.0], [37.0, 1576.0], [37.1, 1576.0], [37.2, 1583.0], [37.3, 1583.0], [37.4, 1583.0], [37.5, 1583.0], [37.6, 1585.0], [37.7, 1585.0], [37.8, 1585.0], [37.9, 1585.0], [38.0, 1606.0], [38.1, 1606.0], [38.2, 1606.0], [38.3, 1606.0], [38.4, 1607.0], [38.5, 1607.0], [38.6, 1607.0], [38.7, 1607.0], [38.8, 1609.0], [38.9, 1609.0], [39.0, 1609.0], [39.1, 1609.0], [39.2, 1612.0], [39.3, 1612.0], [39.4, 1612.0], [39.5, 1612.0], [39.6, 1613.0], [39.7, 1613.0], [39.8, 1613.0], [39.9, 1613.0], [40.0, 1618.0], [40.1, 1618.0], [40.2, 1618.0], [40.3, 1618.0], [40.4, 1620.0], [40.5, 1620.0], [40.6, 1620.0], [40.7, 1620.0], [40.8, 1625.0], [40.9, 1625.0], [41.0, 1625.0], [41.1, 1625.0], [41.2, 1628.0], [41.3, 1628.0], [41.4, 1628.0], [41.5, 1628.0], [41.6, 1629.0], [41.7, 1629.0], [41.8, 1629.0], [41.9, 1629.0], [42.0, 1635.0], [42.1, 1635.0], [42.2, 1635.0], [42.3, 1635.0], [42.4, 1639.0], [42.5, 1639.0], [42.6, 1639.0], [42.7, 1639.0], [42.8, 1648.0], [42.9, 1648.0], [43.0, 1648.0], [43.1, 1648.0], [43.2, 1649.0], [43.3, 1649.0], [43.4, 1649.0], [43.5, 1649.0], [43.6, 1650.0], [43.7, 1650.0], [43.8, 1650.0], [43.9, 1650.0], [44.0, 1654.0], [44.1, 1654.0], [44.2, 1654.0], [44.3, 1654.0], [44.4, 1664.0], [44.5, 1664.0], [44.6, 1664.0], [44.7, 1664.0], [44.8, 1674.0], [44.9, 1674.0], [45.0, 1674.0], [45.1, 1674.0], [45.2, 1674.0], [45.3, 1674.0], [45.4, 1674.0], [45.5, 1674.0], [45.6, 1675.0], [45.7, 1675.0], [45.8, 1675.0], [45.9, 1675.0], [46.0, 1675.0], [46.1, 1675.0], [46.2, 1675.0], [46.3, 1675.0], [46.4, 1687.0], [46.5, 1687.0], [46.6, 1687.0], [46.7, 1687.0], [46.8, 1689.0], [46.9, 1689.0], [47.0, 1689.0], [47.1, 1689.0], [47.2, 1690.0], [47.3, 1690.0], [47.4, 1690.0], [47.5, 1690.0], [47.6, 1693.0], [47.7, 1693.0], [47.8, 1693.0], [47.9, 1693.0], [48.0, 1702.0], [48.1, 1702.0], [48.2, 1702.0], [48.3, 1702.0], [48.4, 1711.0], [48.5, 1711.0], [48.6, 1711.0], [48.7, 1711.0], [48.8, 1717.0], [48.9, 1717.0], [49.0, 1717.0], [49.1, 1717.0], [49.2, 1720.0], [49.3, 1720.0], [49.4, 1720.0], [49.5, 1720.0], [49.6, 1721.0], [49.7, 1721.0], [49.8, 1721.0], [49.9, 1721.0], [50.0, 1722.0], [50.1, 1722.0], [50.2, 1722.0], [50.3, 1722.0], [50.4, 1737.0], [50.5, 1737.0], [50.6, 1737.0], [50.7, 1737.0], [50.8, 1738.0], [50.9, 1738.0], [51.0, 1738.0], [51.1, 1738.0], [51.2, 1740.0], [51.3, 1740.0], [51.4, 1740.0], [51.5, 1740.0], [51.6, 1745.0], [51.7, 1745.0], [51.8, 1745.0], [51.9, 1745.0], [52.0, 1753.0], [52.1, 1753.0], [52.2, 1753.0], [52.3, 1753.0], [52.4, 1754.0], [52.5, 1754.0], [52.6, 1754.0], [52.7, 1754.0], [52.8, 1756.0], [52.9, 1756.0], [53.0, 1756.0], [53.1, 1756.0], [53.2, 1758.0], [53.3, 1758.0], [53.4, 1758.0], [53.5, 1758.0], [53.6, 1762.0], [53.7, 1762.0], [53.8, 1762.0], [53.9, 1762.0], [54.0, 1770.0], [54.1, 1770.0], [54.2, 1770.0], [54.3, 1770.0], [54.4, 1776.0], [54.5, 1776.0], [54.6, 1776.0], [54.7, 1776.0], [54.8, 1779.0], [54.9, 1779.0], [55.0, 1779.0], [55.1, 1779.0], [55.2, 1780.0], [55.3, 1780.0], [55.4, 1780.0], [55.5, 1780.0], [55.6, 1787.0], [55.7, 1787.0], [55.8, 1787.0], [55.9, 1787.0], [56.0, 1788.0], [56.1, 1788.0], [56.2, 1788.0], [56.3, 1788.0], [56.4, 1801.0], [56.5, 1801.0], [56.6, 1801.0], [56.7, 1801.0], [56.8, 1801.0], [56.9, 1801.0], [57.0, 1801.0], [57.1, 1801.0], [57.2, 1803.0], [57.3, 1803.0], [57.4, 1803.0], [57.5, 1803.0], [57.6, 1807.0], [57.7, 1807.0], [57.8, 1807.0], [57.9, 1807.0], [58.0, 1809.0], [58.1, 1809.0], [58.2, 1809.0], [58.3, 1809.0], [58.4, 1811.0], [58.5, 1811.0], [58.6, 1811.0], [58.7, 1811.0], [58.8, 1817.0], [58.9, 1817.0], [59.0, 1817.0], [59.1, 1817.0], [59.2, 1818.0], [59.3, 1818.0], [59.4, 1818.0], [59.5, 1818.0], [59.6, 1823.0], [59.7, 1823.0], [59.8, 1823.0], [59.9, 1823.0], [60.0, 1826.0], [60.1, 1826.0], [60.2, 1826.0], [60.3, 1826.0], [60.4, 1826.0], [60.5, 1826.0], [60.6, 1826.0], [60.7, 1826.0], [60.8, 1840.0], [60.9, 1840.0], [61.0, 1840.0], [61.1, 1840.0], [61.2, 1848.0], [61.3, 1848.0], [61.4, 1848.0], [61.5, 1848.0], [61.6, 1850.0], [61.7, 1850.0], [61.8, 1850.0], [61.9, 1850.0], [62.0, 1851.0], [62.1, 1851.0], [62.2, 1851.0], [62.3, 1851.0], [62.4, 1852.0], [62.5, 1852.0], [62.6, 1852.0], [62.7, 1852.0], [62.8, 1853.0], [62.9, 1853.0], [63.0, 1853.0], [63.1, 1853.0], [63.2, 1854.0], [63.3, 1854.0], [63.4, 1854.0], [63.5, 1854.0], [63.6, 1858.0], [63.7, 1858.0], [63.8, 1858.0], [63.9, 1858.0], [64.0, 1860.0], [64.1, 1860.0], [64.2, 1860.0], [64.3, 1860.0], [64.4, 1866.0], [64.5, 1866.0], [64.6, 1866.0], [64.7, 1866.0], [64.8, 1867.0], [64.9, 1867.0], [65.0, 1867.0], [65.1, 1867.0], [65.2, 1874.0], [65.3, 1874.0], [65.4, 1874.0], [65.5, 1874.0], [65.6, 1881.0], [65.7, 1881.0], [65.8, 1881.0], [65.9, 1881.0], [66.0, 1885.0], [66.1, 1885.0], [66.2, 1885.0], [66.3, 1885.0], [66.4, 1897.0], [66.5, 1897.0], [66.6, 1897.0], [66.7, 1897.0], [66.8, 1898.0], [66.9, 1898.0], [67.0, 1898.0], [67.1, 1898.0], [67.2, 1901.0], [67.3, 1901.0], [67.4, 1901.0], [67.5, 1901.0], [67.6, 1902.0], [67.7, 1902.0], [67.8, 1902.0], [67.9, 1902.0], [68.0, 1907.0], [68.1, 1907.0], [68.2, 1907.0], [68.3, 1907.0], [68.4, 1911.0], [68.5, 1911.0], [68.6, 1911.0], [68.7, 1911.0], [68.8, 1916.0], [68.9, 1916.0], [69.0, 1916.0], [69.1, 1916.0], [69.2, 1933.0], [69.3, 1933.0], [69.4, 1933.0], [69.5, 1933.0], [69.6, 1939.0], [69.7, 1939.0], [69.8, 1939.0], [69.9, 1939.0], [70.0, 1940.0], [70.1, 1940.0], [70.2, 1940.0], [70.3, 1940.0], [70.4, 1942.0], [70.5, 1942.0], [70.6, 1942.0], [70.7, 1942.0], [70.8, 1945.0], [70.9, 1945.0], [71.0, 1945.0], [71.1, 1945.0], [71.2, 1947.0], [71.3, 1947.0], [71.4, 1947.0], [71.5, 1947.0], [71.6, 1948.0], [71.7, 1948.0], [71.8, 1948.0], [71.9, 1948.0], [72.0, 1951.0], [72.1, 1951.0], [72.2, 1951.0], [72.3, 1951.0], [72.4, 1958.0], [72.5, 1958.0], [72.6, 1958.0], [72.7, 1958.0], [72.8, 1958.0], [72.9, 1958.0], [73.0, 1958.0], [73.1, 1958.0], [73.2, 1976.0], [73.3, 1976.0], [73.4, 1976.0], [73.5, 1976.0], [73.6, 1979.0], [73.7, 1979.0], [73.8, 1979.0], [73.9, 1979.0], [74.0, 1983.0], [74.1, 1983.0], [74.2, 1983.0], [74.3, 1983.0], [74.4, 1989.0], [74.5, 1989.0], [74.6, 1989.0], [74.7, 1989.0], [74.8, 1995.0], [74.9, 1995.0], [75.0, 1995.0], [75.1, 1995.0], [75.2, 1996.0], [75.3, 1996.0], [75.4, 1996.0], [75.5, 1996.0], [75.6, 2005.0], [75.7, 2005.0], [75.8, 2005.0], [75.9, 2005.0], [76.0, 2007.0], [76.1, 2007.0], [76.2, 2007.0], [76.3, 2007.0], [76.4, 2008.0], [76.5, 2008.0], [76.6, 2008.0], [76.7, 2008.0], [76.8, 2008.0], [76.9, 2014.0], [77.0, 2014.0], [77.1, 2014.0], [77.2, 2014.0], [77.3, 2015.0], [77.4, 2015.0], [77.5, 2015.0], [77.6, 2015.0], [77.7, 2025.0], [77.8, 2025.0], [77.9, 2025.0], [78.0, 2025.0], [78.1, 2025.0], [78.2, 2025.0], [78.3, 2025.0], [78.4, 2025.0], [78.5, 2031.0], [78.6, 2031.0], [78.7, 2031.0], [78.8, 2031.0], [78.9, 2042.0], [79.0, 2042.0], [79.1, 2042.0], [79.2, 2042.0], [79.3, 2061.0], [79.4, 2061.0], [79.5, 2061.0], [79.6, 2061.0], [79.7, 2063.0], [79.8, 2063.0], [79.9, 2063.0], [80.0, 2063.0], [80.1, 2071.0], [80.2, 2071.0], [80.3, 2071.0], [80.4, 2071.0], [80.5, 2091.0], [80.6, 2091.0], [80.7, 2091.0], [80.8, 2091.0], [80.9, 2094.0], [81.0, 2094.0], [81.1, 2094.0], [81.2, 2094.0], [81.3, 2095.0], [81.4, 2095.0], [81.5, 2095.0], [81.6, 2095.0], [81.7, 2095.0], [81.8, 2095.0], [81.9, 2095.0], [82.0, 2095.0], [82.1, 2103.0], [82.2, 2103.0], [82.3, 2103.0], [82.4, 2103.0], [82.5, 2112.0], [82.6, 2112.0], [82.7, 2112.0], [82.8, 2112.0], [82.9, 2113.0], [83.0, 2113.0], [83.1, 2113.0], [83.2, 2113.0], [83.3, 2114.0], [83.4, 2114.0], [83.5, 2114.0], [83.6, 2114.0], [83.7, 2123.0], [83.8, 2123.0], [83.9, 2123.0], [84.0, 2123.0], [84.1, 2146.0], [84.2, 2146.0], [84.3, 2146.0], [84.4, 2146.0], [84.5, 2148.0], [84.6, 2148.0], [84.7, 2148.0], [84.8, 2148.0], [84.9, 2152.0], [85.0, 2152.0], [85.1, 2152.0], [85.2, 2152.0], [85.3, 2159.0], [85.4, 2159.0], [85.5, 2159.0], [85.6, 2159.0], [85.7, 2165.0], [85.8, 2165.0], [85.9, 2165.0], [86.0, 2165.0], [86.1, 2166.0], [86.2, 2166.0], [86.3, 2166.0], [86.4, 2166.0], [86.5, 2195.0], [86.6, 2195.0], [86.7, 2195.0], [86.8, 2195.0], [86.9, 2204.0], [87.0, 2204.0], [87.1, 2204.0], [87.2, 2204.0], [87.3, 2207.0], [87.4, 2207.0], [87.5, 2207.0], [87.6, 2207.0], [87.7, 2226.0], [87.8, 2226.0], [87.9, 2226.0], [88.0, 2226.0], [88.1, 2237.0], [88.2, 2237.0], [88.3, 2237.0], [88.4, 2237.0], [88.5, 2270.0], [88.6, 2270.0], [88.7, 2270.0], [88.8, 2270.0], [88.9, 2278.0], [89.0, 2278.0], [89.1, 2278.0], [89.2, 2278.0], [89.3, 2299.0], [89.4, 2299.0], [89.5, 2299.0], [89.6, 2299.0], [89.7, 2307.0], [89.8, 2307.0], [89.9, 2307.0], [90.0, 2307.0], [90.1, 2328.0], [90.2, 2328.0], [90.3, 2328.0], [90.4, 2328.0], [90.5, 2334.0], [90.6, 2334.0], [90.7, 2334.0], [90.8, 2334.0], [90.9, 2346.0], [91.0, 2346.0], [91.1, 2346.0], [91.2, 2346.0], [91.3, 2356.0], [91.4, 2356.0], [91.5, 2356.0], [91.6, 2356.0], [91.7, 2359.0], [91.8, 2359.0], [91.9, 2359.0], [92.0, 2359.0], [92.1, 2409.0], [92.2, 2409.0], [92.3, 2409.0], [92.4, 2409.0], [92.5, 2460.0], [92.6, 2460.0], [92.7, 2460.0], [92.8, 2460.0], [92.9, 2465.0], [93.0, 2465.0], [93.1, 2465.0], [93.2, 2465.0], [93.3, 2474.0], [93.4, 2474.0], [93.5, 2474.0], [93.6, 2474.0], [93.7, 2511.0], [93.8, 2511.0], [93.9, 2511.0], [94.0, 2511.0], [94.1, 2515.0], [94.2, 2515.0], [94.3, 2515.0], [94.4, 2515.0], [94.5, 2518.0], [94.6, 2518.0], [94.7, 2518.0], [94.8, 2518.0], [94.9, 2526.0], [95.0, 2526.0], [95.1, 2526.0], [95.2, 2526.0], [95.3, 2538.0], [95.4, 2538.0], [95.5, 2538.0], [95.6, 2538.0], [95.7, 2566.0], [95.8, 2566.0], [95.9, 2566.0], [96.0, 2566.0], [96.1, 2583.0], [96.2, 2583.0], [96.3, 2583.0], [96.4, 2583.0], [96.5, 2615.0], [96.6, 2615.0], [96.7, 2615.0], [96.8, 2615.0], [96.9, 2741.0], [97.0, 2741.0], [97.1, 2741.0], [97.2, 2741.0], [97.3, 2795.0], [97.4, 2795.0], [97.5, 2795.0], [97.6, 2795.0], [97.7, 2989.0], [97.8, 2989.0], [97.9, 2989.0], [98.0, 2989.0], [98.1, 3012.0], [98.2, 3012.0], [98.3, 3012.0], [98.4, 3012.0], [98.5, 3125.0], [98.6, 3125.0], [98.7, 3125.0], [98.8, 3125.0], [98.9, 3131.0], [99.0, 3131.0], [99.1, 3131.0], [99.2, 3131.0], [99.3, 3159.0], [99.4, 3159.0], [99.5, 3159.0], [99.6, 3159.0], [99.7, 3582.0], [99.8, 3582.0], [99.9, 3582.0], [100.0, 3582.0]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[0.0, 254.0], [0.1, 254.0], [0.2, 254.0], [0.3, 254.0], [0.4, 257.0], [0.5, 257.0], [0.6, 257.0], [0.7, 257.0], [0.8, 258.0], [0.9, 258.0], [1.0, 258.0], [1.1, 258.0], [1.2, 258.0], [1.3, 258.0], [1.4, 258.0], [1.5, 258.0], [1.6, 259.0], [1.7, 259.0], [1.8, 259.0], [1.9, 259.0], [2.0, 260.0], [2.1, 260.0], [2.2, 260.0], [2.3, 260.0], [2.4, 260.0], [2.5, 260.0], [2.6, 260.0], [2.7, 260.0], [2.8, 261.0], [2.9, 261.0], [3.0, 261.0], [3.1, 261.0], [3.2, 262.0], [3.3, 262.0], [3.4, 262.0], [3.5, 262.0], [3.6, 264.0], [3.7, 264.0], [3.8, 264.0], [3.9, 264.0], [4.0, 264.0], [4.1, 264.0], [4.2, 264.0], [4.3, 264.0], [4.4, 265.0], [4.5, 265.0], [4.6, 265.0], [4.7, 265.0], [4.8, 265.0], [4.9, 265.0], [5.0, 265.0], [5.1, 265.0], [5.2, 266.0], [5.3, 266.0], [5.4, 266.0], [5.5, 266.0], [5.6, 266.0], [5.7, 266.0], [5.8, 266.0], [5.9, 266.0], [6.0, 266.0], [6.1, 266.0], [6.2, 266.0], [6.3, 266.0], [6.4, 266.0], [6.5, 266.0], [6.6, 266.0], [6.7, 266.0], [6.8, 266.0], [6.9, 266.0], [7.0, 266.0], [7.1, 266.0], [7.2, 267.0], [7.3, 267.0], [7.4, 267.0], [7.5, 267.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 269.0], [8.6, 269.0], [8.7, 269.0], [8.8, 270.0], [8.9, 270.0], [9.0, 270.0], [9.1, 270.0], [9.2, 274.0], [9.3, 274.0], [9.4, 274.0], [9.5, 274.0], [9.6, 274.0], [9.7, 274.0], [9.8, 274.0], [9.9, 274.0], [10.0, 276.0], [10.1, 276.0], [10.2, 276.0], [10.3, 276.0], [10.4, 277.0], [10.5, 277.0], [10.6, 277.0], [10.7, 277.0], [10.8, 277.0], [10.9, 277.0], [11.0, 277.0], [11.1, 277.0], [11.2, 277.0], [11.3, 279.0], [11.4, 279.0], [11.5, 279.0], [11.6, 279.0], [11.7, 279.0], [11.8, 279.0], [11.9, 279.0], [12.0, 279.0], [12.1, 279.0], [12.2, 279.0], [12.3, 279.0], [12.4, 280.0], [12.5, 280.0], [12.6, 280.0], [12.7, 280.0], [12.8, 280.0], [12.9, 280.0], [13.0, 280.0], [13.1, 280.0], [13.2, 280.0], [13.3, 280.0], [13.4, 280.0], [13.5, 280.0], [13.6, 280.0], [13.7, 280.0], [13.8, 280.0], [13.9, 280.0], [14.0, 281.0], [14.1, 281.0], [14.2, 281.0], [14.3, 281.0], [14.4, 282.0], [14.5, 282.0], [14.6, 282.0], [14.7, 282.0], [14.8, 282.0], [14.9, 282.0], [15.0, 282.0], [15.1, 282.0], [15.2, 282.0], [15.3, 282.0], [15.4, 282.0], [15.5, 282.0], [15.6, 282.0], [15.7, 282.0], [15.8, 282.0], [15.9, 282.0], [16.0, 284.0], [16.1, 284.0], [16.2, 284.0], [16.3, 284.0], [16.4, 285.0], [16.5, 285.0], [16.6, 285.0], [16.7, 285.0], [16.8, 285.0], [16.9, 285.0], [17.0, 285.0], [17.1, 285.0], [17.2, 286.0], [17.3, 286.0], [17.4, 286.0], [17.5, 286.0], [17.6, 287.0], [17.7, 287.0], [17.8, 287.0], [17.9, 287.0], [18.0, 287.0], [18.1, 287.0], [18.2, 287.0], [18.3, 287.0], [18.4, 287.0], [18.5, 287.0], [18.6, 287.0], [18.7, 287.0], [18.8, 288.0], [18.9, 288.0], [19.0, 288.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 288.0], [19.6, 290.0], [19.7, 290.0], [19.8, 290.0], [19.9, 290.0], [20.0, 290.0], [20.1, 290.0], [20.2, 290.0], [20.3, 290.0], [20.4, 291.0], [20.5, 291.0], [20.6, 291.0], [20.7, 291.0], [20.8, 292.0], [20.9, 292.0], [21.0, 292.0], [21.1, 292.0], [21.2, 292.0], [21.3, 292.0], [21.4, 292.0], [21.5, 292.0], [21.6, 292.0], [21.7, 292.0], [21.8, 292.0], [21.9, 292.0], [22.0, 293.0], [22.1, 293.0], [22.2, 293.0], [22.3, 293.0], [22.4, 293.0], [22.5, 293.0], [22.6, 293.0], [22.7, 293.0], [22.8, 294.0], [22.9, 294.0], [23.0, 294.0], [23.1, 294.0], [23.2, 295.0], [23.3, 295.0], [23.4, 295.0], [23.5, 295.0], [23.6, 295.0], [23.7, 295.0], [23.8, 295.0], [23.9, 295.0], [24.0, 296.0], [24.1, 296.0], [24.2, 296.0], [24.3, 296.0], [24.4, 296.0], [24.5, 296.0], [24.6, 296.0], [24.7, 296.0], [24.8, 296.0], [24.9, 296.0], [25.0, 296.0], [25.1, 296.0], [25.2, 296.0], [25.3, 296.0], [25.4, 296.0], [25.5, 296.0], [25.6, 296.0], [25.7, 296.0], [25.8, 296.0], [25.9, 296.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 299.0], [26.5, 299.0], [26.6, 299.0], [26.7, 299.0], [26.8, 299.0], [26.9, 299.0], [27.0, 299.0], [27.1, 299.0], [27.2, 301.0], [27.3, 301.0], [27.4, 301.0], [27.5, 301.0], [27.6, 301.0], [27.7, 301.0], [27.8, 301.0], [27.9, 301.0], [28.0, 302.0], [28.1, 302.0], [28.2, 302.0], [28.3, 302.0], [28.4, 303.0], [28.5, 303.0], [28.6, 303.0], [28.7, 303.0], [28.8, 304.0], [28.9, 304.0], [29.0, 304.0], [29.1, 304.0], [29.2, 305.0], [29.3, 305.0], [29.4, 305.0], [29.5, 305.0], [29.6, 306.0], [29.7, 306.0], [29.8, 306.0], [29.9, 306.0], [30.0, 306.0], [30.1, 306.0], [30.2, 306.0], [30.3, 306.0], [30.4, 307.0], [30.5, 307.0], [30.6, 307.0], [30.7, 307.0], [30.8, 308.0], [30.9, 308.0], [31.0, 308.0], [31.1, 308.0], [31.2, 309.0], [31.3, 309.0], [31.4, 309.0], [31.5, 309.0], [31.6, 311.0], [31.7, 311.0], [31.8, 311.0], [31.9, 311.0], [32.0, 312.0], [32.1, 312.0], [32.2, 312.0], [32.3, 312.0], [32.4, 312.0], [32.5, 312.0], [32.6, 312.0], [32.7, 312.0], [32.8, 313.0], [32.9, 313.0], [33.0, 313.0], [33.1, 313.0], [33.2, 313.0], [33.3, 313.0], [33.4, 313.0], [33.5, 313.0], [33.6, 315.0], [33.7, 315.0], [33.8, 315.0], [33.9, 315.0], [34.0, 318.0], [34.1, 318.0], [34.2, 318.0], [34.3, 318.0], [34.4, 318.0], [34.5, 318.0], [34.6, 318.0], [34.7, 318.0], [34.8, 318.0], [34.9, 318.0], [35.0, 318.0], [35.1, 318.0], [35.2, 319.0], [35.3, 319.0], [35.4, 319.0], [35.5, 319.0], [35.6, 319.0], [35.7, 319.0], [35.8, 319.0], [35.9, 319.0], [36.0, 319.0], [36.1, 319.0], [36.2, 319.0], [36.3, 319.0], [36.4, 320.0], [36.5, 320.0], [36.6, 320.0], [36.7, 320.0], [36.8, 321.0], [36.9, 321.0], [37.0, 321.0], [37.1, 321.0], [37.2, 322.0], [37.3, 322.0], [37.4, 322.0], [37.5, 322.0], [37.6, 322.0], [37.7, 322.0], [37.8, 322.0], [37.9, 322.0], [38.0, 322.0], [38.1, 322.0], [38.2, 322.0], [38.3, 322.0], [38.4, 325.0], [38.5, 325.0], [38.6, 325.0], [38.7, 325.0], [38.8, 325.0], [38.9, 325.0], [39.0, 325.0], [39.1, 325.0], [39.2, 326.0], [39.3, 326.0], [39.4, 326.0], [39.5, 326.0], [39.6, 327.0], [39.7, 327.0], [39.8, 327.0], [39.9, 327.0], [40.0, 327.0], [40.1, 327.0], [40.2, 327.0], [40.3, 327.0], [40.4, 327.0], [40.5, 327.0], [40.6, 327.0], [40.7, 327.0], [40.8, 328.0], [40.9, 328.0], [41.0, 328.0], [41.1, 328.0], [41.2, 328.0], [41.3, 328.0], [41.4, 328.0], [41.5, 328.0], [41.6, 329.0], [41.7, 329.0], [41.8, 329.0], [41.9, 329.0], [42.0, 329.0], [42.1, 329.0], [42.2, 329.0], [42.3, 329.0], [42.4, 331.0], [42.5, 331.0], [42.6, 331.0], [42.7, 331.0], [42.8, 331.0], [42.9, 331.0], [43.0, 331.0], [43.1, 331.0], [43.2, 332.0], [43.3, 332.0], [43.4, 332.0], [43.5, 332.0], [43.6, 332.0], [43.7, 332.0], [43.8, 332.0], [43.9, 332.0], [44.0, 335.0], [44.1, 335.0], [44.2, 335.0], [44.3, 335.0], [44.4, 336.0], [44.5, 336.0], [44.6, 336.0], [44.7, 336.0], [44.8, 336.0], [44.9, 336.0], [45.0, 336.0], [45.1, 336.0], [45.2, 337.0], [45.3, 337.0], [45.4, 337.0], [45.5, 337.0], [45.6, 337.0], [45.7, 337.0], [45.8, 337.0], [45.9, 337.0], [46.0, 338.0], [46.1, 338.0], [46.2, 338.0], [46.3, 338.0], [46.4, 338.0], [46.5, 338.0], [46.6, 338.0], [46.7, 338.0], [46.8, 340.0], [46.9, 340.0], [47.0, 340.0], [47.1, 340.0], [47.2, 342.0], [47.3, 342.0], [47.4, 342.0], [47.5, 342.0], [47.6, 344.0], [47.7, 344.0], [47.8, 344.0], [47.9, 344.0], [48.0, 345.0], [48.1, 345.0], [48.2, 345.0], [48.3, 345.0], [48.4, 346.0], [48.5, 346.0], [48.6, 346.0], [48.7, 346.0], [48.8, 346.0], [48.9, 346.0], [49.0, 346.0], [49.1, 346.0], [49.2, 348.0], [49.3, 348.0], [49.4, 348.0], [49.5, 348.0], [49.6, 348.0], [49.7, 348.0], [49.8, 348.0], [49.9, 348.0], [50.0, 348.0], [50.1, 348.0], [50.2, 348.0], [50.3, 348.0], [50.4, 349.0], [50.5, 349.0], [50.6, 349.0], [50.7, 349.0], [50.8, 353.0], [50.9, 353.0], [51.0, 353.0], [51.1, 353.0], [51.2, 354.0], [51.3, 354.0], [51.4, 354.0], [51.5, 354.0], [51.6, 354.0], [51.7, 354.0], [51.8, 354.0], [51.9, 354.0], [52.0, 355.0], [52.1, 355.0], [52.2, 355.0], [52.3, 355.0], [52.4, 356.0], [52.5, 356.0], [52.6, 356.0], [52.7, 356.0], [52.8, 359.0], [52.9, 359.0], [53.0, 359.0], [53.1, 359.0], [53.2, 360.0], [53.3, 360.0], [53.4, 360.0], [53.5, 360.0], [53.6, 360.0], [53.7, 360.0], [53.8, 360.0], [53.9, 360.0], [54.0, 361.0], [54.1, 361.0], [54.2, 361.0], [54.3, 361.0], [54.4, 362.0], [54.5, 362.0], [54.6, 362.0], [54.7, 362.0], [54.8, 364.0], [54.9, 364.0], [55.0, 364.0], [55.1, 364.0], [55.2, 364.0], [55.3, 364.0], [55.4, 364.0], [55.5, 364.0], [55.6, 364.0], [55.7, 364.0], [55.8, 364.0], [55.9, 364.0], [56.0, 366.0], [56.1, 366.0], [56.2, 366.0], [56.3, 366.0], [56.4, 369.0], [56.5, 369.0], [56.6, 369.0], [56.7, 369.0], [56.8, 370.0], [56.9, 370.0], [57.0, 370.0], [57.1, 370.0], [57.2, 371.0], [57.3, 371.0], [57.4, 371.0], [57.5, 371.0], [57.6, 373.0], [57.7, 373.0], [57.8, 373.0], [57.9, 373.0], [58.0, 375.0], [58.1, 375.0], [58.2, 375.0], [58.3, 375.0], [58.4, 375.0], [58.5, 375.0], [58.6, 375.0], [58.7, 375.0], [58.8, 376.0], [58.9, 376.0], [59.0, 376.0], [59.1, 376.0], [59.2, 376.0], [59.3, 376.0], [59.4, 376.0], [59.5, 376.0], [59.6, 378.0], [59.7, 378.0], [59.8, 378.0], [59.9, 378.0], [60.0, 378.0], [60.1, 378.0], [60.2, 378.0], [60.3, 378.0], [60.4, 379.0], [60.5, 379.0], [60.6, 379.0], [60.7, 379.0], [60.8, 383.0], [60.9, 383.0], [61.0, 383.0], [61.1, 383.0], [61.2, 387.0], [61.3, 387.0], [61.4, 387.0], [61.5, 387.0], [61.6, 388.0], [61.7, 388.0], [61.8, 388.0], [61.9, 388.0], [62.0, 389.0], [62.1, 389.0], [62.2, 389.0], [62.3, 389.0], [62.4, 389.0], [62.5, 389.0], [62.6, 389.0], [62.7, 389.0], [62.8, 389.0], [62.9, 389.0], [63.0, 389.0], [63.1, 389.0], [63.2, 392.0], [63.3, 392.0], [63.4, 392.0], [63.5, 392.0], [63.6, 395.0], [63.7, 395.0], [63.8, 395.0], [63.9, 395.0], [64.0, 395.0], [64.1, 395.0], [64.2, 395.0], [64.3, 395.0], [64.4, 396.0], [64.5, 396.0], [64.6, 396.0], [64.7, 396.0], [64.8, 399.0], [64.9, 399.0], [65.0, 399.0], [65.1, 399.0], [65.2, 399.0], [65.3, 399.0], [65.4, 399.0], [65.5, 399.0], [65.6, 401.0], [65.7, 401.0], [65.8, 401.0], [65.9, 401.0], [66.0, 404.0], [66.1, 404.0], [66.2, 404.0], [66.3, 404.0], [66.4, 410.0], [66.5, 410.0], [66.6, 410.0], [66.7, 410.0], [66.8, 413.0], [66.9, 413.0], [67.0, 413.0], [67.1, 413.0], [67.2, 414.0], [67.3, 414.0], [67.4, 414.0], [67.5, 414.0], [67.6, 416.0], [67.7, 416.0], [67.8, 416.0], [67.9, 416.0], [68.0, 422.0], [68.1, 422.0], [68.2, 422.0], [68.3, 422.0], [68.4, 423.0], [68.5, 423.0], [68.6, 423.0], [68.7, 423.0], [68.8, 425.0], [68.9, 425.0], [69.0, 425.0], [69.1, 425.0], [69.2, 430.0], [69.3, 430.0], [69.4, 430.0], [69.5, 430.0], [69.6, 433.0], [69.7, 433.0], [69.8, 433.0], [69.9, 433.0], [70.0, 434.0], [70.1, 434.0], [70.2, 434.0], [70.3, 434.0], [70.4, 434.0], [70.5, 434.0], [70.6, 434.0], [70.7, 434.0], [70.8, 445.0], [70.9, 445.0], [71.0, 445.0], [71.1, 445.0], [71.2, 448.0], [71.3, 448.0], [71.4, 448.0], [71.5, 448.0], [71.6, 460.0], [71.7, 460.0], [71.8, 460.0], [71.9, 460.0], [72.0, 464.0], [72.1, 464.0], [72.2, 464.0], [72.3, 464.0], [72.4, 472.0], [72.5, 472.0], [72.6, 472.0], [72.7, 472.0], [72.8, 472.0], [72.9, 484.0], [73.0, 484.0], [73.1, 484.0], [73.2, 484.0], [73.3, 495.0], [73.4, 495.0], [73.5, 495.0], [73.6, 495.0], [73.7, 499.0], [73.8, 499.0], [73.9, 499.0], [74.0, 499.0], [74.1, 504.0], [74.2, 504.0], [74.3, 504.0], [74.4, 504.0], [74.5, 506.0], [74.6, 506.0], [74.7, 506.0], [74.8, 506.0], [74.9, 529.0], [75.0, 529.0], [75.1, 529.0], [75.2, 529.0], [75.3, 531.0], [75.4, 531.0], [75.5, 531.0], [75.6, 531.0], [75.7, 533.0], [75.8, 533.0], [75.9, 533.0], [76.0, 533.0], [76.1, 540.0], [76.2, 540.0], [76.3, 540.0], [76.4, 540.0], [76.5, 549.0], [76.6, 549.0], [76.7, 549.0], [76.8, 549.0], [76.9, 554.0], [77.0, 554.0], [77.1, 554.0], [77.2, 554.0], [77.3, 558.0], [77.4, 558.0], [77.5, 558.0], [77.6, 558.0], [77.7, 558.0], [77.8, 558.0], [77.9, 558.0], [78.0, 558.0], [78.1, 561.0], [78.2, 561.0], [78.3, 561.0], [78.4, 561.0], [78.5, 571.0], [78.6, 571.0], [78.7, 571.0], [78.8, 571.0], [78.9, 576.0], [79.0, 576.0], [79.1, 576.0], [79.2, 576.0], [79.3, 578.0], [79.4, 578.0], [79.5, 578.0], [79.6, 578.0], [79.7, 586.0], [79.8, 586.0], [79.9, 586.0], [80.0, 586.0], [80.1, 586.0], [80.2, 586.0], [80.3, 586.0], [80.4, 586.0], [80.5, 587.0], [80.6, 587.0], [80.7, 587.0], [80.8, 587.0], [80.9, 591.0], [81.0, 591.0], [81.1, 591.0], [81.2, 591.0], [81.3, 598.0], [81.4, 598.0], [81.5, 598.0], [81.6, 598.0], [81.7, 607.0], [81.8, 607.0], [81.9, 607.0], [82.0, 607.0], [82.1, 607.0], [82.2, 607.0], [82.3, 607.0], [82.4, 607.0], [82.5, 612.0], [82.6, 612.0], [82.7, 612.0], [82.8, 612.0], [82.9, 615.0], [83.0, 615.0], [83.1, 615.0], [83.2, 615.0], [83.3, 622.0], [83.4, 622.0], [83.5, 622.0], [83.6, 622.0], [83.7, 623.0], [83.8, 623.0], [83.9, 623.0], [84.0, 623.0], [84.1, 639.0], [84.2, 639.0], [84.3, 639.0], [84.4, 639.0], [84.5, 643.0], [84.6, 643.0], [84.7, 643.0], [84.8, 643.0], [84.9, 644.0], [85.0, 644.0], [85.1, 644.0], [85.2, 644.0], [85.3, 657.0], [85.4, 657.0], [85.5, 657.0], [85.6, 657.0], [85.7, 659.0], [85.8, 659.0], [85.9, 659.0], [86.0, 659.0], [86.1, 667.0], [86.2, 667.0], [86.3, 667.0], [86.4, 667.0], [86.5, 674.0], [86.6, 674.0], [86.7, 674.0], [86.8, 674.0], [86.9, 687.0], [87.0, 687.0], [87.1, 687.0], [87.2, 687.0], [87.3, 690.0], [87.4, 690.0], [87.5, 690.0], [87.6, 690.0], [87.7, 691.0], [87.8, 691.0], [87.9, 691.0], [88.0, 691.0], [88.1, 711.0], [88.2, 711.0], [88.3, 711.0], [88.4, 711.0], [88.5, 716.0], [88.6, 716.0], [88.7, 716.0], [88.8, 716.0], [88.9, 730.0], [89.0, 730.0], [89.1, 730.0], [89.2, 730.0], [89.3, 736.0], [89.4, 736.0], [89.5, 736.0], [89.6, 736.0], [89.7, 747.0], [89.8, 747.0], [89.9, 747.0], [90.0, 747.0], [90.1, 755.0], [90.2, 755.0], [90.3, 755.0], [90.4, 755.0], [90.5, 763.0], [90.6, 763.0], [90.7, 763.0], [90.8, 763.0], [90.9, 783.0], [91.0, 783.0], [91.1, 783.0], [91.2, 783.0], [91.3, 819.0], [91.4, 819.0], [91.5, 819.0], [91.6, 819.0], [91.7, 825.0], [91.8, 825.0], [91.9, 825.0], [92.0, 825.0], [92.1, 886.0], [92.2, 886.0], [92.3, 886.0], [92.4, 886.0], [92.5, 895.0], [92.6, 895.0], [92.7, 895.0], [92.8, 895.0], [92.9, 910.0], [93.0, 910.0], [93.1, 910.0], [93.2, 910.0], [93.3, 912.0], [93.4, 912.0], [93.5, 912.0], [93.6, 912.0], [93.7, 917.0], [93.8, 917.0], [93.9, 917.0], [94.0, 917.0], [94.1, 930.0], [94.2, 930.0], [94.3, 930.0], [94.4, 930.0], [94.5, 939.0], [94.6, 939.0], [94.7, 939.0], [94.8, 939.0], [94.9, 977.0], [95.0, 977.0], [95.1, 977.0], [95.2, 977.0], [95.3, 983.0], [95.4, 983.0], [95.5, 983.0], [95.6, 983.0], [95.7, 999.0], [95.8, 999.0], [95.9, 999.0], [96.0, 999.0], [96.1, 1012.0], [96.2, 1012.0], [96.3, 1012.0], [96.4, 1012.0], [96.5, 1037.0], [96.6, 1037.0], [96.7, 1037.0], [96.8, 1037.0], [96.9, 1131.0], [97.0, 1131.0], [97.1, 1131.0], [97.2, 1131.0], [97.3, 1207.0], [97.4, 1207.0], [97.5, 1207.0], [97.6, 1207.0], [97.7, 1298.0], [97.8, 1298.0], [97.9, 1298.0], [98.0, 1298.0], [98.1, 1408.0], [98.2, 1408.0], [98.3, 1408.0], [98.4, 1408.0], [98.5, 1508.0], [98.6, 1508.0], [98.7, 1508.0], [98.8, 1508.0], [98.9, 1516.0], [99.0, 1516.0], [99.1, 1516.0], [99.2, 1516.0], [99.3, 1567.0], [99.4, 1567.0], [99.5, 1567.0], [99.6, 1567.0], [99.7, 1685.0], [99.8, 1685.0], [99.9, 1685.0], [100.0, 1685.0]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[0.0, 246.0], [0.1, 246.0], [0.2, 246.0], [0.3, 246.0], [0.4, 251.0], [0.5, 251.0], [0.6, 251.0], [0.7, 251.0], [0.8, 253.0], [0.9, 253.0], [1.0, 253.0], [1.1, 253.0], [1.2, 253.0], [1.3, 253.0], [1.4, 253.0], [1.5, 253.0], [1.6, 253.0], [1.7, 253.0], [1.8, 253.0], [1.9, 253.0], [2.0, 254.0], [2.1, 254.0], [2.2, 254.0], [2.3, 254.0], [2.4, 255.0], [2.5, 255.0], [2.6, 255.0], [2.7, 255.0], [2.8, 258.0], [2.9, 258.0], [3.0, 258.0], [3.1, 258.0], [3.2, 259.0], [3.3, 259.0], [3.4, 259.0], [3.5, 259.0], [3.6, 260.0], [3.7, 260.0], [3.8, 260.0], [3.9, 260.0], [4.0, 262.0], [4.1, 262.0], [4.2, 262.0], [4.3, 262.0], [4.4, 262.0], [4.5, 262.0], [4.6, 262.0], [4.7, 262.0], [4.8, 263.0], [4.9, 263.0], [5.0, 263.0], [5.1, 263.0], [5.2, 265.0], [5.3, 265.0], [5.4, 265.0], [5.5, 265.0], [5.6, 265.0], [5.7, 266.0], [5.8, 266.0], [5.9, 266.0], [6.0, 266.0], [6.1, 266.0], [6.2, 266.0], [6.3, 266.0], [6.4, 267.0], [6.5, 267.0], [6.6, 267.0], [6.7, 267.0], [6.8, 267.0], [6.9, 267.0], [7.0, 267.0], [7.1, 267.0], [7.2, 267.0], [7.3, 267.0], [7.4, 267.0], [7.5, 267.0], [7.6, 267.0], [7.7, 267.0], [7.8, 267.0], [7.9, 267.0], [8.0, 268.0], [8.1, 268.0], [8.2, 268.0], [8.3, 268.0], [8.4, 268.0], [8.5, 268.0], [8.6, 268.0], [8.7, 268.0], [8.8, 269.0], [8.9, 269.0], [9.0, 269.0], [9.1, 269.0], [9.2, 269.0], [9.3, 271.0], [9.4, 271.0], [9.5, 271.0], [9.6, 271.0], [9.7, 271.0], [9.8, 271.0], [9.9, 271.0], [10.0, 271.0], [10.1, 271.0], [10.2, 271.0], [10.3, 271.0], [10.4, 271.0], [10.5, 271.0], [10.6, 271.0], [10.7, 271.0], [10.8, 272.0], [10.9, 272.0], [11.0, 272.0], [11.1, 272.0], [11.2, 272.0], [11.3, 272.0], [11.4, 272.0], [11.5, 272.0], [11.6, 272.0], [11.7, 272.0], [11.8, 272.0], [11.9, 272.0], [12.0, 272.0], [12.1, 272.0], [12.2, 272.0], [12.3, 272.0], [12.4, 273.0], [12.5, 273.0], [12.6, 273.0], [12.7, 273.0], [12.8, 273.0], [12.9, 273.0], [13.0, 273.0], [13.1, 273.0], [13.2, 273.0], [13.3, 273.0], [13.4, 273.0], [13.5, 273.0], [13.6, 273.0], [13.7, 273.0], [13.8, 273.0], [13.9, 273.0], [14.0, 273.0], [14.1, 273.0], [14.2, 273.0], [14.3, 273.0], [14.4, 274.0], [14.5, 274.0], [14.6, 274.0], [14.7, 274.0], [14.8, 274.0], [14.9, 274.0], [15.0, 274.0], [15.1, 274.0], [15.2, 274.0], [15.3, 275.0], [15.4, 275.0], [15.5, 275.0], [15.6, 275.0], [15.7, 275.0], [15.8, 275.0], [15.9, 275.0], [16.0, 276.0], [16.1, 276.0], [16.2, 276.0], [16.3, 276.0], [16.4, 277.0], [16.5, 277.0], [16.6, 277.0], [16.7, 277.0], [16.8, 277.0], [16.9, 277.0], [17.0, 277.0], [17.1, 277.0], [17.2, 280.0], [17.3, 280.0], [17.4, 280.0], [17.5, 280.0], [17.6, 280.0], [17.7, 280.0], [17.8, 280.0], [17.9, 280.0], [18.0, 282.0], [18.1, 282.0], [18.2, 282.0], [18.3, 282.0], [18.4, 282.0], [18.5, 282.0], [18.6, 282.0], [18.7, 282.0], [18.8, 283.0], [18.9, 283.0], [19.0, 283.0], [19.1, 283.0], [19.2, 284.0], [19.3, 284.0], [19.4, 284.0], [19.5, 284.0], [19.6, 285.0], [19.7, 285.0], [19.8, 285.0], [19.9, 285.0], [20.0, 285.0], [20.1, 285.0], [20.2, 285.0], [20.3, 285.0], [20.4, 285.0], [20.5, 285.0], [20.6, 285.0], [20.7, 285.0], [20.8, 287.0], [20.9, 287.0], [21.0, 287.0], [21.1, 287.0], [21.2, 287.0], [21.3, 287.0], [21.4, 287.0], [21.5, 287.0], [21.6, 288.0], [21.7, 288.0], [21.8, 288.0], [21.9, 288.0], [22.0, 289.0], [22.1, 289.0], [22.2, 289.0], [22.3, 289.0], [22.4, 289.0], [22.5, 289.0], [22.6, 289.0], [22.7, 289.0], [22.8, 289.0], [22.9, 289.0], [23.0, 289.0], [23.1, 289.0], [23.2, 291.0], [23.3, 291.0], [23.4, 291.0], [23.5, 291.0], [23.6, 291.0], [23.7, 291.0], [23.8, 291.0], [23.9, 291.0], [24.0, 292.0], [24.1, 292.0], [24.2, 292.0], [24.3, 292.0], [24.4, 293.0], [24.5, 293.0], [24.6, 293.0], [24.7, 293.0], [24.8, 293.0], [24.9, 293.0], [25.0, 293.0], [25.1, 293.0], [25.2, 294.0], [25.3, 294.0], [25.4, 294.0], [25.5, 294.0], [25.6, 296.0], [25.7, 296.0], [25.8, 296.0], [25.9, 296.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 298.0], [26.9, 298.0], [27.0, 298.0], [27.1, 298.0], [27.2, 298.0], [27.3, 298.0], [27.4, 298.0], [27.5, 298.0], [27.6, 298.0], [27.7, 298.0], [27.8, 298.0], [27.9, 298.0], [28.0, 299.0], [28.1, 299.0], [28.2, 299.0], [28.3, 299.0], [28.4, 299.0], [28.5, 299.0], [28.6, 299.0], [28.7, 299.0], [28.8, 300.0], [28.9, 300.0], [29.0, 300.0], [29.1, 300.0], [29.2, 300.0], [29.3, 300.0], [29.4, 300.0], [29.5, 300.0], [29.6, 301.0], [29.7, 301.0], [29.8, 301.0], [29.9, 301.0], [30.0, 303.0], [30.1, 303.0], [30.2, 303.0], [30.3, 303.0], [30.4, 303.0], [30.5, 303.0], [30.6, 303.0], [30.7, 303.0], [30.8, 304.0], [30.9, 304.0], [31.0, 304.0], [31.1, 304.0], [31.2, 306.0], [31.3, 306.0], [31.4, 306.0], [31.5, 306.0], [31.6, 306.0], [31.7, 306.0], [31.8, 306.0], [31.9, 306.0], [32.0, 307.0], [32.1, 307.0], [32.2, 307.0], [32.3, 307.0], [32.4, 307.0], [32.5, 307.0], [32.6, 307.0], [32.7, 307.0], [32.8, 308.0], [32.9, 308.0], [33.0, 308.0], [33.1, 308.0], [33.2, 308.0], [33.3, 308.0], [33.4, 308.0], [33.5, 308.0], [33.6, 309.0], [33.7, 309.0], [33.8, 309.0], [33.9, 309.0], [34.0, 311.0], [34.1, 311.0], [34.2, 311.0], [34.3, 311.0], [34.4, 312.0], [34.5, 312.0], [34.6, 312.0], [34.7, 312.0], [34.8, 314.0], [34.9, 314.0], [35.0, 314.0], [35.1, 314.0], [35.2, 315.0], [35.3, 315.0], [35.4, 315.0], [35.5, 315.0], [35.6, 316.0], [35.7, 316.0], [35.8, 316.0], [35.9, 316.0], [36.0, 317.0], [36.1, 317.0], [36.2, 317.0], [36.3, 317.0], [36.4, 318.0], [36.5, 318.0], [36.6, 318.0], [36.7, 318.0], [36.8, 321.0], [36.9, 321.0], [37.0, 321.0], [37.1, 321.0], [37.2, 322.0], [37.3, 322.0], [37.4, 322.0], [37.5, 322.0], [37.6, 322.0], [37.7, 322.0], [37.8, 322.0], [37.9, 322.0], [38.0, 322.0], [38.1, 322.0], [38.2, 322.0], [38.3, 322.0], [38.4, 322.0], [38.5, 322.0], [38.6, 322.0], [38.7, 322.0], [38.8, 323.0], [38.9, 323.0], [39.0, 323.0], [39.1, 323.0], [39.2, 324.0], [39.3, 324.0], [39.4, 324.0], [39.5, 324.0], [39.6, 326.0], [39.7, 326.0], [39.8, 326.0], [39.9, 326.0], [40.0, 328.0], [40.1, 328.0], [40.2, 328.0], [40.3, 328.0], [40.4, 331.0], [40.5, 331.0], [40.6, 331.0], [40.7, 331.0], [40.8, 333.0], [40.9, 333.0], [41.0, 333.0], [41.1, 333.0], [41.2, 336.0], [41.3, 336.0], [41.4, 336.0], [41.5, 336.0], [41.6, 337.0], [41.7, 337.0], [41.8, 337.0], [41.9, 337.0], [42.0, 337.0], [42.1, 337.0], [42.2, 337.0], [42.3, 337.0], [42.4, 339.0], [42.5, 339.0], [42.6, 339.0], [42.7, 339.0], [42.8, 339.0], [42.9, 339.0], [43.0, 339.0], [43.1, 339.0], [43.2, 340.0], [43.3, 340.0], [43.4, 340.0], [43.5, 340.0], [43.6, 340.0], [43.7, 340.0], [43.8, 340.0], [43.9, 340.0], [44.0, 340.0], [44.1, 340.0], [44.2, 340.0], [44.3, 340.0], [44.4, 341.0], [44.5, 341.0], [44.6, 341.0], [44.7, 341.0], [44.8, 341.0], [44.9, 341.0], [45.0, 341.0], [45.1, 341.0], [45.2, 341.0], [45.3, 341.0], [45.4, 341.0], [45.5, 341.0], [45.6, 341.0], [45.7, 341.0], [45.8, 341.0], [45.9, 341.0], [46.0, 342.0], [46.1, 342.0], [46.2, 342.0], [46.3, 342.0], [46.4, 342.0], [46.5, 342.0], [46.6, 342.0], [46.7, 342.0], [46.8, 342.0], [46.9, 342.0], [47.0, 342.0], [47.1, 342.0], [47.2, 343.0], [47.3, 343.0], [47.4, 343.0], [47.5, 343.0], [47.6, 345.0], [47.7, 345.0], [47.8, 345.0], [47.9, 345.0], [48.0, 346.0], [48.1, 346.0], [48.2, 346.0], [48.3, 346.0], [48.4, 346.0], [48.5, 346.0], [48.6, 346.0], [48.7, 346.0], [48.8, 346.0], [48.9, 346.0], [49.0, 346.0], [49.1, 346.0], [49.2, 347.0], [49.3, 347.0], [49.4, 347.0], [49.5, 347.0], [49.6, 349.0], [49.7, 349.0], [49.8, 349.0], [49.9, 349.0], [50.0, 351.0], [50.1, 351.0], [50.2, 351.0], [50.3, 351.0], [50.4, 352.0], [50.5, 352.0], [50.6, 352.0], [50.7, 352.0], [50.8, 353.0], [50.9, 353.0], [51.0, 353.0], [51.1, 353.0], [51.2, 355.0], [51.3, 355.0], [51.4, 355.0], [51.5, 355.0], [51.6, 356.0], [51.7, 356.0], [51.8, 356.0], [51.9, 356.0], [52.0, 358.0], [52.1, 358.0], [52.2, 358.0], [52.3, 358.0], [52.4, 359.0], [52.5, 359.0], [52.6, 359.0], [52.7, 359.0], [52.8, 359.0], [52.9, 359.0], [53.0, 359.0], [53.1, 359.0], [53.2, 359.0], [53.3, 359.0], [53.4, 359.0], [53.5, 359.0], [53.6, 362.0], [53.7, 362.0], [53.8, 362.0], [53.9, 362.0], [54.0, 362.0], [54.1, 362.0], [54.2, 362.0], [54.3, 362.0], [54.4, 362.0], [54.5, 362.0], [54.6, 362.0], [54.7, 362.0], [54.8, 364.0], [54.9, 364.0], [55.0, 364.0], [55.1, 364.0], [55.2, 364.0], [55.3, 364.0], [55.4, 364.0], [55.5, 364.0], [55.6, 365.0], [55.7, 365.0], [55.8, 365.0], [55.9, 365.0], [56.0, 365.0], [56.1, 365.0], [56.2, 365.0], [56.3, 365.0], [56.4, 366.0], [56.5, 366.0], [56.6, 366.0], [56.7, 366.0], [56.8, 370.0], [56.9, 370.0], [57.0, 370.0], [57.1, 370.0], [57.2, 371.0], [57.3, 371.0], [57.4, 371.0], [57.5, 371.0], [57.6, 372.0], [57.7, 372.0], [57.8, 372.0], [57.9, 372.0], [58.0, 374.0], [58.1, 374.0], [58.2, 374.0], [58.3, 374.0], [58.4, 377.0], [58.5, 377.0], [58.6, 377.0], [58.7, 377.0], [58.8, 379.0], [58.9, 379.0], [59.0, 379.0], [59.1, 379.0], [59.2, 382.0], [59.3, 382.0], [59.4, 382.0], [59.5, 382.0], [59.6, 382.0], [59.7, 382.0], [59.8, 382.0], [59.9, 382.0], [60.0, 386.0], [60.1, 386.0], [60.2, 386.0], [60.3, 386.0], [60.4, 388.0], [60.5, 388.0], [60.6, 388.0], [60.7, 388.0], [60.8, 389.0], [60.9, 389.0], [61.0, 389.0], [61.1, 389.0], [61.2, 390.0], [61.3, 390.0], [61.4, 390.0], [61.5, 390.0], [61.6, 394.0], [61.7, 394.0], [61.8, 394.0], [61.9, 394.0], [62.0, 396.0], [62.1, 396.0], [62.2, 396.0], [62.3, 396.0], [62.4, 397.0], [62.5, 397.0], [62.6, 397.0], [62.7, 397.0], [62.8, 399.0], [62.9, 399.0], [63.0, 399.0], [63.1, 399.0], [63.2, 402.0], [63.3, 402.0], [63.4, 402.0], [63.5, 402.0], [63.6, 413.0], [63.7, 413.0], [63.8, 413.0], [63.9, 413.0], [64.0, 414.0], [64.1, 414.0], [64.2, 414.0], [64.3, 414.0], [64.4, 416.0], [64.5, 416.0], [64.6, 416.0], [64.7, 416.0], [64.8, 419.0], [64.9, 419.0], [65.0, 419.0], [65.1, 419.0], [65.2, 419.0], [65.3, 419.0], [65.4, 419.0], [65.5, 419.0], [65.6, 429.0], [65.7, 429.0], [65.8, 429.0], [65.9, 429.0], [66.0, 429.0], [66.1, 429.0], [66.2, 429.0], [66.3, 429.0], [66.4, 429.0], [66.5, 429.0], [66.6, 429.0], [66.7, 429.0], [66.8, 430.0], [66.9, 430.0], [67.0, 430.0], [67.1, 430.0], [67.2, 432.0], [67.3, 432.0], [67.4, 432.0], [67.5, 432.0], [67.6, 433.0], [67.7, 433.0], [67.8, 433.0], [67.9, 433.0], [68.0, 435.0], [68.1, 435.0], [68.2, 435.0], [68.3, 435.0], [68.4, 446.0], [68.5, 446.0], [68.6, 446.0], [68.7, 446.0], [68.8, 448.0], [68.9, 448.0], [69.0, 448.0], [69.1, 448.0], [69.2, 450.0], [69.3, 450.0], [69.4, 450.0], [69.5, 450.0], [69.6, 454.0], [69.7, 454.0], [69.8, 454.0], [69.9, 454.0], [70.0, 454.0], [70.1, 454.0], [70.2, 454.0], [70.3, 454.0], [70.4, 461.0], [70.5, 461.0], [70.6, 461.0], [70.7, 461.0], [70.8, 465.0], [70.9, 465.0], [71.0, 465.0], [71.1, 465.0], [71.2, 465.0], [71.3, 465.0], [71.4, 465.0], [71.5, 465.0], [71.6, 472.0], [71.7, 472.0], [71.8, 472.0], [71.9, 472.0], [72.0, 472.0], [72.1, 472.0], [72.2, 472.0], [72.3, 472.0], [72.4, 475.0], [72.5, 475.0], [72.6, 475.0], [72.7, 475.0], [72.8, 475.0], [72.9, 475.0], [73.0, 475.0], [73.1, 475.0], [73.2, 477.0], [73.3, 477.0], [73.4, 477.0], [73.5, 477.0], [73.6, 478.0], [73.7, 478.0], [73.8, 478.0], [73.9, 478.0], [74.0, 483.0], [74.1, 483.0], [74.2, 483.0], [74.3, 483.0], [74.4, 490.0], [74.5, 490.0], [74.6, 490.0], [74.7, 490.0], [74.8, 492.0], [74.9, 492.0], [75.0, 492.0], [75.1, 492.0], [75.2, 494.0], [75.3, 494.0], [75.4, 494.0], [75.5, 494.0], [75.6, 494.0], [75.7, 498.0], [75.8, 498.0], [75.9, 498.0], [76.0, 498.0], [76.1, 498.0], [76.2, 498.0], [76.3, 498.0], [76.4, 506.0], [76.5, 506.0], [76.6, 506.0], [76.7, 506.0], [76.8, 506.0], [76.9, 509.0], [77.0, 509.0], [77.1, 509.0], [77.2, 509.0], [77.3, 509.0], [77.4, 509.0], [77.5, 509.0], [77.6, 509.0], [77.7, 511.0], [77.8, 511.0], [77.9, 511.0], [78.0, 511.0], [78.1, 514.0], [78.2, 514.0], [78.3, 514.0], [78.4, 514.0], [78.5, 520.0], [78.6, 520.0], [78.7, 520.0], [78.8, 520.0], [78.9, 520.0], [79.0, 520.0], [79.1, 520.0], [79.2, 520.0], [79.3, 522.0], [79.4, 522.0], [79.5, 522.0], [79.6, 522.0], [79.7, 526.0], [79.8, 526.0], [79.9, 526.0], [80.0, 526.0], [80.1, 526.0], [80.2, 526.0], [80.3, 526.0], [80.4, 526.0], [80.5, 528.0], [80.6, 528.0], [80.7, 528.0], [80.8, 528.0], [80.9, 537.0], [81.0, 537.0], [81.1, 537.0], [81.2, 537.0], [81.3, 553.0], [81.4, 553.0], [81.5, 553.0], [81.6, 553.0], [81.7, 555.0], [81.8, 555.0], [81.9, 555.0], [82.0, 555.0], [82.1, 557.0], [82.2, 557.0], [82.3, 557.0], [82.4, 557.0], [82.5, 558.0], [82.6, 558.0], [82.7, 558.0], [82.8, 558.0], [82.9, 568.0], [83.0, 568.0], [83.1, 568.0], [83.2, 568.0], [83.3, 581.0], [83.4, 581.0], [83.5, 581.0], [83.6, 581.0], [83.7, 583.0], [83.8, 583.0], [83.9, 583.0], [84.0, 583.0], [84.1, 587.0], [84.2, 587.0], [84.3, 587.0], [84.4, 587.0], [84.5, 587.0], [84.6, 587.0], [84.7, 587.0], [84.8, 587.0], [84.9, 594.0], [85.0, 594.0], [85.1, 594.0], [85.2, 594.0], [85.3, 608.0], [85.4, 608.0], [85.5, 608.0], [85.6, 608.0], [85.7, 617.0], [85.8, 617.0], [85.9, 617.0], [86.0, 617.0], [86.1, 620.0], [86.2, 620.0], [86.3, 620.0], [86.4, 620.0], [86.5, 640.0], [86.6, 640.0], [86.7, 640.0], [86.8, 640.0], [86.9, 643.0], [87.0, 643.0], [87.1, 643.0], [87.2, 643.0], [87.3, 647.0], [87.4, 647.0], [87.5, 647.0], [87.6, 647.0], [87.7, 658.0], [87.8, 658.0], [87.9, 658.0], [88.0, 658.0], [88.1, 669.0], [88.2, 669.0], [88.3, 669.0], [88.4, 669.0], [88.5, 676.0], [88.6, 676.0], [88.7, 676.0], [88.8, 676.0], [88.9, 676.0], [89.0, 676.0], [89.1, 676.0], [89.2, 676.0], [89.3, 687.0], [89.4, 687.0], [89.5, 687.0], [89.6, 687.0], [89.7, 699.0], [89.8, 699.0], [89.9, 699.0], [90.0, 699.0], [90.1, 709.0], [90.2, 709.0], [90.3, 709.0], [90.4, 709.0], [90.5, 711.0], [90.6, 711.0], [90.7, 711.0], [90.8, 711.0], [90.9, 724.0], [91.0, 724.0], [91.1, 724.0], [91.2, 724.0], [91.3, 729.0], [91.4, 729.0], [91.5, 729.0], [91.6, 729.0], [91.7, 733.0], [91.8, 733.0], [91.9, 733.0], [92.0, 733.0], [92.1, 746.0], [92.2, 746.0], [92.3, 746.0], [92.4, 746.0], [92.5, 761.0], [92.6, 761.0], [92.7, 761.0], [92.8, 761.0], [92.9, 791.0], [93.0, 791.0], [93.1, 791.0], [93.2, 791.0], [93.3, 798.0], [93.4, 798.0], [93.5, 798.0], [93.6, 798.0], [93.7, 837.0], [93.8, 837.0], [93.9, 837.0], [94.0, 837.0], [94.1, 838.0], [94.2, 838.0], [94.3, 838.0], [94.4, 838.0], [94.5, 856.0], [94.6, 856.0], [94.7, 856.0], [94.8, 856.0], [94.9, 861.0], [95.0, 861.0], [95.1, 861.0], [95.2, 861.0], [95.3, 893.0], [95.4, 893.0], [95.5, 893.0], [95.6, 893.0], [95.7, 895.0], [95.8, 895.0], [95.9, 895.0], [96.0, 895.0], [96.1, 898.0], [96.2, 898.0], [96.3, 898.0], [96.4, 898.0], [96.5, 934.0], [96.6, 934.0], [96.7, 934.0], [96.8, 934.0], [96.9, 1002.0], [97.0, 1002.0], [97.1, 1002.0], [97.2, 1002.0], [97.3, 1060.0], [97.4, 1060.0], [97.5, 1060.0], [97.6, 1060.0], [97.7, 1136.0], [97.8, 1136.0], [97.9, 1136.0], [98.0, 1136.0], [98.1, 1248.0], [98.2, 1248.0], [98.3, 1248.0], [98.4, 1248.0], [98.5, 1264.0], [98.6, 1264.0], [98.7, 1264.0], [98.8, 1264.0], [98.9, 1264.0], [99.0, 1264.0], [99.1, 1264.0], [99.2, 1264.0], [99.3, 1352.0], [99.4, 1352.0], [99.5, 1352.0], [99.6, 1352.0], [99.7, 1403.0], [99.8, 1403.0], [99.9, 1403.0], [100.0, 1403.0]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 96.0, "series": [{"data": [[1100.0, 1.0], [300.0, 83.0], [600.0, 16.0], [1200.0, 2.0], [700.0, 13.0], [200.0, 35.0], [400.0, 58.0], [800.0, 9.0], [900.0, 8.0], [500.0, 25.0]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[2100.0, 12.0], [2200.0, 7.0], [2300.0, 6.0], [2400.0, 4.0], [2500.0, 7.0], [2600.0, 1.0], [2700.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 3.0], [800.0, 2.0], [3500.0, 1.0], [900.0, 5.0], [1000.0, 14.0], [1100.0, 10.0], [1200.0, 16.0], [1300.0, 16.0], [1400.0, 18.0], [1500.0, 14.0], [1600.0, 25.0], [1700.0, 21.0], [1800.0, 27.0], [1900.0, 21.0], [2000.0, 16.0]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[600.0, 16.0], [700.0, 8.0], [200.0, 68.0], [800.0, 4.0], [900.0, 8.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 96.0], [1200.0, 2.0], [1400.0, 1.0], [1500.0, 3.0], [400.0, 21.0], [1600.0, 1.0], [500.0, 19.0]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[600.0, 12.0], [700.0, 9.0], [200.0, 72.0], [800.0, 7.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 86.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 1.0], [400.0, 33.0], [500.0, 22.0]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 61.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 553.0, "series": [{"data": [[0.0, 553.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 275.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 111.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 61.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 218.92100000000008, "minX": 1.69352256E12, "maxY": 218.92100000000008, "series": [{"data": [[1.69352256E12, 218.92100000000008]], "isOverall": false, "label": "Teste de Performance", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69352256E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 246.0, "minX": 1.0, "maxY": 1732.9640000000004, "series": [{"data": [[250.0, 468.584]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[250.0, 468.584]], "isOverall": false, "label": "Encontrar voos-Aggregated", "isController": false}, {"data": [[250.0, 1732.9640000000004]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[250.0, 1732.9640000000004]], "isOverall": false, "label": "Consultar Destino-Aggregated", "isController": false}, {"data": [[250.0, 449.776]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[250.0, 449.776]], "isOverall": false, "label": "Pagamento-Aggregated", "isController": false}, {"data": [[2.0, 1352.0], [3.0, 326.0], [4.0, 253.0], [5.0, 253.0], [6.0, 1264.0], [7.0, 276.0], [8.0, 345.0], [9.0, 1248.0], [12.0, 913.3333333333334], [13.0, 861.0], [14.0, 277.0], [15.0, 1060.0], [16.0, 709.0], [18.0, 297.5], [19.0, 856.0], [20.0, 837.0], [22.0, 642.0], [23.0, 254.0], [24.0, 251.0], [25.0, 271.0], [26.0, 347.0], [27.0, 761.0], [29.0, 686.0], [30.0, 898.0], [31.0, 643.0], [33.0, 893.0], [32.0, 934.0], [35.0, 262.0], [34.0, 729.0], [37.0, 272.0], [36.0, 262.0], [39.0, 246.0], [38.0, 733.0], [41.0, 273.0], [40.0, 838.0], [43.0, 255.0], [42.0, 258.0], [45.0, 275.0], [44.0, 687.0], [47.0, 303.0], [46.0, 746.0], [49.0, 342.0], [48.0, 699.0], [51.0, 364.0], [50.0, 798.0], [53.0, 259.0], [52.0, 352.0], [55.0, 346.0], [54.0, 587.0], [57.0, 711.0], [56.0, 340.0], [59.0, 685.5], [60.0, 791.0], [62.0, 286.0], [65.0, 301.0], [64.0, 277.0], [71.0, 430.0], [70.0, 323.5], [68.0, 490.3333333333333], [75.0, 298.0], [74.0, 587.0], [73.0, 318.0], [72.0, 351.0], [79.0, 287.0], [78.0, 419.0], [77.0, 315.0], [76.0, 669.0], [83.0, 311.0], [82.0, 291.0], [81.0, 280.0], [80.0, 298.0], [86.0, 522.0], [85.0, 358.0], [84.0, 265.0], [91.0, 568.0], [90.0, 555.0], [89.0, 285.0], [88.0, 380.5], [95.0, 676.0], [94.0, 294.0], [93.0, 426.0], [99.0, 271.0], [98.0, 333.0], [97.0, 268.0], [96.0, 317.0], [102.0, 277.0], [101.0, 490.0], [100.0, 306.0], [106.0, 273.0], [105.0, 553.0], [104.0, 409.0], [111.0, 501.5], [109.0, 498.0], [108.0, 407.5], [115.0, 583.0], [114.0, 594.0], [113.0, 337.0], [112.0, 382.0], [119.0, 498.0], [118.0, 454.0], [117.0, 304.0], [116.0, 399.0], [123.0, 284.0], [122.0, 640.0], [121.0, 289.0], [120.0, 296.0], [127.0, 312.0], [126.0, 308.0], [125.0, 280.0], [124.0, 475.0], [134.0, 340.3333333333333], [131.0, 676.0], [130.0, 303.0], [129.0, 322.0], [128.0, 309.0], [143.0, 427.3333333333333], [140.0, 520.0], [139.0, 501.0], [137.0, 274.0], [136.0, 388.5], [150.0, 372.0], [149.0, 292.0], [148.0, 337.0], [147.0, 506.0], [146.0, 450.0], [145.0, 472.0], [144.0, 617.0], [159.0, 300.0], [158.0, 341.0], [156.0, 322.0], [155.0, 341.0], [154.0, 449.5], [152.0, 372.5], [167.0, 478.0], [166.0, 422.5], [164.0, 353.0], [163.0, 483.0], [162.0, 500.5], [160.0, 416.0], [174.0, 514.0], [173.0, 389.0], [171.0, 374.0], [170.0, 377.0], [169.0, 362.0], [168.0, 620.0], [183.0, 526.0], [181.0, 429.0], [179.0, 328.0], [178.0, 339.0], [177.0, 263.0], [176.0, 398.5], [190.0, 446.0], [189.0, 443.5], [187.0, 465.0], [186.0, 370.0], [185.0, 297.0], [184.0, 285.0], [199.0, 331.0], [198.0, 365.0], [196.0, 308.0], [195.0, 342.0], [194.0, 435.0], [193.0, 322.0], [192.0, 352.0], [207.0, 397.0], [206.0, 320.0], [204.0, 298.0], [203.0, 366.0], [202.0, 273.0], [201.0, 357.0], [215.0, 388.0], [214.0, 349.0], [213.0, 268.0], [212.0, 494.0], [211.0, 326.0], [209.0, 413.0], [208.0, 343.0], [223.0, 311.5], [221.0, 341.0], [219.0, 389.0], [218.0, 293.0], [217.0, 396.0], [216.0, 364.0], [231.0, 267.0], [230.0, 371.0], [229.0, 346.0], [227.0, 272.0], [226.0, 328.0], [224.0, 340.0], [239.0, 297.0], [238.0, 253.0], [237.0, 267.0], [236.0, 382.0], [235.0, 307.0], [234.0, 402.0], [233.0, 266.0], [232.0, 414.0], [247.0, 274.0], [246.0, 288.0], [245.0, 314.0], [244.0, 365.0], [243.0, 267.0], [241.0, 269.0], [240.0, 359.0], [250.0, 260.0], [249.0, 275.0], [248.0, 272.0], [1.0, 1403.0]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}, {"data": [[125.68399999999993, 430.2920000000001]], "isOverall": false, "label": "Confirmação de Pagamento-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3233.3333333333335, "minX": 1.69352256E12, "maxY": 102087.5, "series": [{"data": [[1.69352256E12, 102087.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69352256E12, 3233.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69352256E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 430.2920000000001, "minX": 1.69352256E12, "maxY": 1732.9640000000004, "series": [{"data": [[1.69352256E12, 468.584]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[1.69352256E12, 1732.9640000000004]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[1.69352256E12, 449.776]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[1.69352256E12, 430.2920000000001]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69352256E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 418.61600000000016, "minX": 1.69352256E12, "maxY": 1721.4319999999993, "series": [{"data": [[1.69352256E12, 448.62399999999974]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[1.69352256E12, 1721.4319999999993]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[1.69352256E12, 437.8160000000001]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[1.69352256E12, 418.61600000000016]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69352256E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69352256E12, "maxY": 977.2879999999999, "series": [{"data": [[1.69352256E12, 0.0]], "isOverall": false, "label": "Encontrar voos", "isController": false}, {"data": [[1.69352256E12, 977.2879999999999]], "isOverall": false, "label": "Consultar Destino", "isController": false}, {"data": [[1.69352256E12, 0.0]], "isOverall": false, "label": "Pagamento", "isController": false}, {"data": [[1.69352256E12, 0.0]], "isOverall": false, "label": "Confirmação de Pagamento", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69352256E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 246.0, "minX": 1.69352256E12, "maxY": 1996.0, "series": [{"data": [[1.69352256E12, 1996.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69352256E12, 1607.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69352256E12, 1949.8000000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69352256E12, 1801.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69352256E12, 246.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69352256E12, 425.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69352256E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 255.0, "minX": 1.0, "maxY": 3068.5, "series": [{"data": [[2.0, 1541.5], [149.0, 362.0], [38.0, 560.0], [10.0, 1095.0], [11.0, 288.0], [46.0, 389.5], [192.0, 423.0], [56.0, 333.5], [1.0, 255.0], [115.0, 378.0], [7.0, 326.0], [117.0, 1439.0], [123.0, 337.0], [125.0, 1783.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 3068.5], [125.0, 2166.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 192.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 235.0, "minX": 1.0, "maxY": 3057.0, "series": [{"data": [[2.0, 1529.5], [149.0, 351.0], [38.0, 548.5], [10.0, 1083.0], [11.0, 288.0], [46.0, 371.0], [192.0, 406.0], [56.0, 321.0], [1.0, 235.0], [115.0, 367.0], [7.0, 315.0], [117.0, 1428.0], [123.0, 324.0], [125.0, 1771.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 3057.0], [125.0, 2154.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 192.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69352256E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69352256E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69352256E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69352256E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69352256E12, 16.666666666666668]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69352256E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0166666666666666, "minX": 1.69352256E12, "maxY": 4.166666666666667, "series": [{"data": [[1.69352256E12, 4.166666666666667]], "isOverall": false, "label": "Encontrar voos-success", "isController": false}, {"data": [[1.69352256E12, 4.166666666666667]], "isOverall": false, "label": "Pagamento-success", "isController": false}, {"data": [[1.69352256E12, 4.166666666666667]], "isOverall": false, "label": "Confirmação de Pagamento-success", "isController": false}, {"data": [[1.69352256E12, 3.15]], "isOverall": false, "label": "Consultar Destino-success", "isController": false}, {"data": [[1.69352256E12, 1.0166666666666666]], "isOverall": false, "label": "Consultar Destino-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69352256E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0166666666666666, "minX": 1.69352256E12, "maxY": 15.65, "series": [{"data": [[1.69352256E12, 15.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69352256E12, 1.0166666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69352256E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

